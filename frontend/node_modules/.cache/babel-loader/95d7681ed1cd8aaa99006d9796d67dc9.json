{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Issue_Tracker\\\\frontend\\\\src\\\\components\\\\main\\\\pages\\\\Projects\\\\ProjectPage\\\\ProjectPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport EmptyNotification from '../../../../../reusable/notifications/EmptyNotification/EmptyNotification';\nimport Projects from '../Projects';\nimport './ProjectPage.css';\nimport ProjectTask from './ProjectTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProjectPage(_ref) {\n  _s();\n\n  let {\n    userData,\n    currentProjectId,\n    project,\n    updateInputValue,\n    asideIsOpen,\n    createNewTask,\n    openTaskPage,\n    deleteProjectButton\n  } = _ref;\n\n  function openTaskPageClicked(taskId, taskType) {\n    openTaskPage(taskId, taskType, currentProjectId);\n  }\n\n  const [deleteButtonIsOpen, setDeleteButtonIsOpen] = useState(false);\n\n  function deleteProjectButtonClicked(currentProjectId) {\n    setDeleteButtonIsOpen(true);\n    setTimeout(() => {\n      setDeleteButtonIsOpen(false);\n    }, 3000);\n  }\n\n  function closeDeleteOptions() {\n    setDeleteButtonIsOpen(false);\n  }\n\n  function deleteProjectCheckButton(currentProjectId) {\n    setDeleteButtonIsOpen(false);\n    deleteProjectButton(currentProjectId);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main__head\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main__head-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main__head-info--top\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: (e, target) => updateInputValue(e, project),\n            className: \"head-info__title\",\n            value: project.title,\n            placeholder: \"Add Project Name...\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), !deleteButtonIsOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteProjectButtonClicked(currentProjectId),\n            className: \"button--delete btn-transparent\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-trash-can\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 49\n          }, this), deleteButtonIsOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"delete__options-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"options-container__bar--outer\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"options-container__bar--inner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteProjectCheckButton(currentProjectId),\n              className: \"options-container__button btn-transparent\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"options-container__button--delete fa-solid fa-check\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => closeDeleteOptions(),\n              className: \"options-container__button btn-transparent\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"options-container__button--close fa-solid fa-xmark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"head-info__date\",\n          children: [\"Created on \", project.dateCreated, \" at \", project.timeCreated, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `main__content ${asideIsOpen ? 'main__content--large' : 'main__content--small'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main__list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main__list-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"main__list-header--icon fa-solid fa-layer-group color--primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main__list-header--text\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"list-header__title\",\n              children: \"To Do\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"list-header__subtitle\",\n              children: [project.tasks.toDo.filter(task => task.isDeleted === false).length, \" \", project.tasks.toDo.filter(task => task.isDeleted === false).length === 1 ? 'task' : 'tasks', \" remaining\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => createNewTask(currentProjectId, 'To Do'),\n          className: \"list__add-btn btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"list__add-btn--icon fa-solid fa-circle-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"list__add-btn--text\",\n            children: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list list--to-do\",\n          children: [[...project.tasks.toDo.filter(task => task.isDeleted === false)].length === 0 && /*#__PURE__*/_jsxDEV(EmptyNotification, {\n            icon: \"fa-solid fa-box-open\",\n            text: \"Looks like this list is empty!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 107\n          }, this), [...project.tasks.toDo.filter(task => task.isDeleted === false)].map(task => {\n            return /*#__PURE__*/_jsxDEV(ProjectTask, {\n              id: task.id,\n              title: task.title,\n              author: task.author,\n              content: task.content,\n              tag: task.tag,\n              timeCreated: task.timeCreated,\n              dateCreated: task.dateCreated,\n              dateCreatedShort: task.dateCreatedShort,\n              comments: task.comments,\n              isDeleted: task.isDeleted,\n              taskType: \"To Do\",\n              openTaskPageClicked: (taskId, taskType) => openTaskPageClicked(taskId, taskType)\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 36\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main__list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main__list-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"main__list-header--icon fa-solid fa-trowel-bricks color--yellow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main__list-header--text\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"list-header__title\",\n              children: \"In Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"list-header__subtitle\",\n              children: [project.tasks.inProgress.filter(task => task.isDeleted === false).length, \" \", project.tasks.inProgress.filter(task => task.isDeleted === false).length === 1 ? 'task' : 'tasks', \" remaining\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => createNewTask(currentProjectId, 'In Progress'),\n          className: \"list__add-btn btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"list__add-btn--icon fa-solid fa-circle-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"list__add-btn--text\",\n            children: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list list--in-progress\",\n          children: [[...project.tasks.inProgress.filter(task => task.isDeleted === false)].length === 0 && /*#__PURE__*/_jsxDEV(EmptyNotification, {\n            icon: \"fa-solid fa-box-open\",\n            text: \"Looks like this list is empty!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 113\n          }, this), [...project.tasks.inProgress.filter(task => task.isDeleted === false)].map(task => {\n            return /*#__PURE__*/_jsxDEV(ProjectTask, {\n              id: task.id,\n              title: task.title,\n              author: task.author,\n              content: task.content,\n              tag: task.tag,\n              timeCreated: task.timeCreated,\n              dateCreated: task.dateCreated,\n              dateCreatedShort: task.dateCreatedShort,\n              comments: task.comments,\n              isDeleted: task.isDeleted,\n              taskType: \"In Progress\",\n              openTaskPageClicked: (taskId, taskType) => openTaskPageClicked(taskId, taskType)\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 36\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main__list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main__list-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"main__list-header--icon fa-solid fa-fire color--green\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main__list-header--text\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"list-header__title\",\n              children: \"Complete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"list-header__subtitle\",\n              children: [project.tasks.complete.filter(task => task.isDeleted === false).length, \" \", project.tasks.complete.filter(task => task.isDeleted === false).length === 1 ? 'task' : 'tasks', \" remaining\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => createNewTask(currentProjectId, 'Complete'),\n          className: \"list__add-btn btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"list__add-btn--icon fa-solid fa-circle-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"list__add-btn--text\",\n            children: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list list--complete\",\n          children: [[...project.tasks.complete.filter(task => task.isDeleted === false)].length === 0 && /*#__PURE__*/_jsxDEV(EmptyNotification, {\n            icon: \"fa-solid fa-box-open\",\n            text: \"Looks like this list is empty!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 111\n          }, this), [...project.tasks.complete.filter(task => task.isDeleted === false)].map(task => {\n            return /*#__PURE__*/_jsxDEV(ProjectTask, {\n              id: task.id,\n              title: task.title,\n              author: task.author,\n              content: task.content,\n              tag: task.tag,\n              timeCreated: task.timeCreated,\n              dateCreated: task.dateCreated,\n              dateCreatedShort: task.dateCreatedShort,\n              comments: task.comments,\n              isDeleted: task.isDeleted,\n              taskType: \"Complete\",\n              openTaskPageClicked: (taskId, taskType) => openTaskPageClicked(taskId, taskType)\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 36\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProjectPage, \"3njCx3Q3GlXrDszydXB07PtyotA=\");\n\n_c = ProjectPage;\nexport default ProjectPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectPage\");","map":{"version":3,"names":["useState","useEffect","EmptyNotification","Projects","ProjectTask","ProjectPage","userData","currentProjectId","project","updateInputValue","asideIsOpen","createNewTask","openTaskPage","deleteProjectButton","openTaskPageClicked","taskId","taskType","deleteButtonIsOpen","setDeleteButtonIsOpen","deleteProjectButtonClicked","setTimeout","closeDeleteOptions","deleteProjectCheckButton","e","target","title","dateCreated","timeCreated","tasks","toDo","filter","task","isDeleted","length","map","id","author","content","tag","dateCreatedShort","comments","inProgress","complete"],"sources":["D:/Projects/Issue_Tracker/frontend/src/components/main/pages/Projects/ProjectPage/ProjectPage.js"],"sourcesContent":["\nimport { useState, useEffect } from 'react';\nimport EmptyNotification from '../../../../../reusable/notifications/EmptyNotification/EmptyNotification';\nimport Projects from '../Projects';\nimport './ProjectPage.css';\nimport ProjectTask from './ProjectTask';\n\nfunction ProjectPage({ userData, currentProjectId, project, updateInputValue, asideIsOpen, createNewTask, openTaskPage, deleteProjectButton }) {\n    function openTaskPageClicked(taskId, taskType) {\n        openTaskPage(taskId, taskType, currentProjectId);\n    }\n\n    const [deleteButtonIsOpen, setDeleteButtonIsOpen] = useState(false);\n    function deleteProjectButtonClicked(currentProjectId) {\n        setDeleteButtonIsOpen(true);\n        setTimeout(() => {\n            setDeleteButtonIsOpen(false);\n        }, 3000);\n    }\n\n    function closeDeleteOptions() {\n        setDeleteButtonIsOpen(false);\n    }\n\n    function deleteProjectCheckButton(currentProjectId) {\n        setDeleteButtonIsOpen(false);\n        deleteProjectButton(currentProjectId);\n    }\n\n    return (\n        <div className=\"project-page\">\n            {/* Project Title Information */}\n            <div className=\"main__head\">\n                <div className=\"main__head-info\">\n                    <div className=\"main__head-info--top\">\n                        <input onChange={(e, target) => updateInputValue(e, project)} className=\"head-info__title\" value={project.title} placeholder=\"Add Project Name...\" type=\"text\" />\n                        {!deleteButtonIsOpen && <button onClick={() => deleteProjectButtonClicked(currentProjectId)} className=\"button--delete btn-transparent\">\n                            <i className=\"fa-solid fa-trash-can\"></i>\n                        </button>}\n                        {deleteButtonIsOpen && <div className=\"delete__options-container\">\n                            <div className=\"options-container__bar--outer\">\n                                <div className=\"options-container__bar--inner\"></div>\n                            </div>\n                            <button onClick={() => deleteProjectCheckButton(currentProjectId)} className=\"options-container__button btn-transparent\">\n                                <i className=\"options-container__button--delete fa-solid fa-check\"></i>\n                            </button>\n                            <button onClick={() => closeDeleteOptions()} className=\"options-container__button btn-transparent\">\n                                <i className=\"options-container__button--close fa-solid fa-xmark\"></i>\n                            </button>\n                        </div>}\n                    </div>\n                    <p className=\"head-info__date\">Created on {project.dateCreated} at {project.timeCreated}.</p>\n                </div>\n            </div>\n\n            {/* Project List Content */}\n            <div className={`main__content ${asideIsOpen ? 'main__content--large' : 'main__content--small'}`}>\n                <div className=\"main__list\">\n                    {/* List Header */}\n                    <div className=\"main__list-header\">\n                        <i className=\"main__list-header--icon fa-solid fa-layer-group color--primary\"></i>\n                        <div className=\"main__list-header--text\">\n                            <h3 className=\"list-header__title\">To Do</h3>\n                            <p className=\"list-header__subtitle\">{project.tasks.toDo.filter(task => task.isDeleted === false).length} {project.tasks.toDo.filter(task => task.isDeleted === false).length === 1 ? 'task' : 'tasks'} remaining</p>\n                        </div>\n                    </div>\n                    {/* List Button */}\n                    <button onClick={() => createNewTask(currentProjectId, 'To Do')} className=\"list__add-btn btn\">\n                        <i className=\"list__add-btn--icon fa-solid fa-circle-plus\"></i>\n                        <p className=\"list__add-btn--text\">Add Task</p>\n                    </button>\n                    {/* List */}\n                    <div className=\"list list--to-do\">\n                        {/* List Items */}\n                        {[...project.tasks.toDo.filter(task => task.isDeleted === false)].length === 0 && <EmptyNotification\n                            icon='fa-solid fa-box-open'\n                            text='Looks like this list is empty!'\n                        />}\n                        {/* {project.tasks.toDo.length === 0 && <EmptyNotification\n                            icon='fa-solid fa-box-open'\n                            text='Looks like this list is empty!'\n                        />} */}\n                        {[...project.tasks.toDo.filter(task => task.isDeleted === false)].map(task => {\n                            return <ProjectTask\n                                key={task.id}\n                                id={task.id}\n                                title={task.title}\n                                author={task.author}\n                                content={task.content}\n                                tag={task.tag}\n                                timeCreated={task.timeCreated}\n                                dateCreated={task.dateCreated}\n                                dateCreatedShort={task.dateCreatedShort}\n                                comments={task.comments}\n                                isDeleted={task.isDeleted}\n                                taskType='To Do'\n                                openTaskPageClicked={(taskId, taskType) => openTaskPageClicked(taskId, taskType)}\n                            />\n                        })}\n                        {/* {project.tasks.toDo.length > 0 && project.tasks.toDo.map(task => <ProjectTask\n                            key={task.id}\n                            id={task.id}\n                            title={task.title}\n                            author={task.author}\n                            content={task.content}\n                            tag={task.tag}\n                            timeCreated={task.timeCreated}\n                            dateCreated={task.dateCreated}\n                            dateCreatedShort={task.dateCreatedShort}\n                            comments={task.comments}\n                            isDeleted={task.isDeleted}\n                            taskType='To Do'\n                            openTaskPageClicked={(taskId, taskType) => openTaskPageClicked(taskId, taskType)}\n                        />)} */}\n\n                    </div>\n                </div>\n\n                <div className=\"main__list\">\n                    {/* List Header */}\n                    <div className=\"main__list-header\">\n                        <i className=\"main__list-header--icon fa-solid fa-trowel-bricks color--yellow\"></i>\n                        <div className=\"main__list-header--text\">\n                            <h3 className=\"list-header__title\">In Progress</h3>\n                            <p className=\"list-header__subtitle\">{project.tasks.inProgress.filter(task => task.isDeleted === false).length} {project.tasks.inProgress.filter(task => task.isDeleted === false).length === 1 ? 'task' : 'tasks'} remaining</p>\n                        </div>\n                    </div>\n                    {/* List Button */}\n                    <button onClick={() => createNewTask(currentProjectId, 'In Progress')} className=\"list__add-btn btn\">\n                        <i className=\"list__add-btn--icon fa-solid fa-circle-plus\"></i>\n                        <p className=\"list__add-btn--text\">Add Task</p>\n                    </button>\n                    {/* List */}\n                    <div className=\"list list--in-progress\">\n                        {/* List Items */}\n                        {[...project.tasks.inProgress.filter(task => task.isDeleted === false)].length === 0 && <EmptyNotification\n                            icon='fa-solid fa-box-open'\n                            text='Looks like this list is empty!'\n                        />}\n                        {/* {project.tasks.inProgress.length === 0 && <EmptyNotification\n                            icon='fa-solid fa-box-open'\n                            text='Looks like this list is empty!'\n                        />} */}\n                        {[...project.tasks.inProgress.filter(task => task.isDeleted === false)].map(task => {\n                            return <ProjectTask\n                                key={task.id}\n                                id={task.id}\n                                title={task.title}\n                                author={task.author}\n                                content={task.content}\n                                tag={task.tag}\n                                timeCreated={task.timeCreated}\n                                dateCreated={task.dateCreated}\n                                dateCreatedShort={task.dateCreatedShort}\n                                comments={task.comments}\n                                isDeleted={task.isDeleted}\n                                taskType='In Progress'\n                                openTaskPageClicked={(taskId, taskType) => openTaskPageClicked(taskId, taskType)}\n                            />\n                        })}\n                        {/* {project.tasks.inProgress.length > 0 && project.tasks.inProgress.map(task => <ProjectTask\n                            key={task.id}\n                            id={task.id}\n                            title={task.title}\n                            author={task.author}\n                            content={task.content}\n                            tag={task.tag}\n                            timeCreated={task.timeCreated}\n                            dateCreated={task.dateCreated}\n                            dateCreatedShort={task.dateCreatedShort}\n                            comments={task.comments}\n                            isDeleted={task.isDeleted}\n                            taskType='In Progress'\n                            openTaskPageClicked={(taskId, taskType) => openTaskPageClicked(taskId, taskType)}\n                        />)} */}\n\n                    </div>\n                </div>\n\n                <div className=\"main__list\">\n                    {/* List Header */}\n                    <div className=\"main__list-header\">\n                        <i className=\"main__list-header--icon fa-solid fa-fire color--green\"></i>\n                        <div className=\"main__list-header--text\">\n                            <h3 className=\"list-header__title\">Complete</h3>\n                            <p className=\"list-header__subtitle\">{project.tasks.complete.filter(task => task.isDeleted === false).length} {project.tasks.complete.filter(task => task.isDeleted === false).length === 1 ? 'task' : 'tasks'} remaining</p>\n                        </div>\n                    </div>\n                    {/* List Button */}\n                    <button onClick={() => createNewTask(currentProjectId, 'Complete')} className=\"list__add-btn btn\">\n                        <i className=\"list__add-btn--icon fa-solid fa-circle-plus\"></i>\n                        <p className=\"list__add-btn--text\">Add Task</p>\n                    </button>\n                    {/* List */}\n                    <div className=\"list list--complete\">\n                        {/* List Items */}\n                        {[...project.tasks.complete.filter(task => task.isDeleted === false)].length === 0 && <EmptyNotification\n                            icon='fa-solid fa-box-open'\n                            text='Looks like this list is empty!'\n                        />}\n                        {/* {project.tasks.complete.length === 0 && <EmptyNotification\n                            icon='fa-solid fa-box-open'\n                            text='Looks like this list is empty!'\n                        />} */}\n                        {[...project.tasks.complete.filter(task => task.isDeleted === false)].map(task => {\n                            return <ProjectTask\n                                key={task.id}\n                                id={task.id}\n                                title={task.title}\n                                author={task.author}\n                                content={task.content}\n                                tag={task.tag}\n                                timeCreated={task.timeCreated}\n                                dateCreated={task.dateCreated}\n                                dateCreatedShort={task.dateCreatedShort}\n                                comments={task.comments}\n                                isDeleted={task.isDeleted}\n                                taskType='Complete'\n                                openTaskPageClicked={(taskId, taskType) => openTaskPageClicked(taskId, taskType)}\n                            />\n                        })}\n                        {/* {project.tasks.complete.length > 0 && project.tasks.complete.map(task => <ProjectTask\n                            key={task.id}\n                            id={task.id}\n                            title={task.title}\n                            author={task.author}\n                            content={task.content}\n                            tag={task.tag}\n                            timeCreated={task.timeCreated}\n                            dateCreated={task.dateCreated}\n                            dateCreatedShort={task.dateCreatedShort}\n                            comments={task.comments}\n                            isDeleted={task.isDeleted}\n                            taskType='Complete'\n                            openTaskPageClicked={(taskId, taskType) => openTaskPageClicked(taskId, taskType)}\n                        />)} */}\n\n                    </div>\n                </div>\n            </div>\n\n\n\n        </div >\n    )\n}\n\nexport default ProjectPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}