{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Issue_Tracker\\\\frontend\\\\src\\\\components\\\\main\\\\pages\\\\Task\\\\TaskPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport EmptyNotification from '../../../../reusable/notifications/EmptyNotification/EmptyNotification';\nimport TaskComment from './TaskComment';\nimport './TaskPage.css';\nimport ButtonStrong from '../../../../reusable/buttons/ButtonStrong/ButtonStrong';\nimport { toHaveAccessibleDescription } from '@testing-library/jest-dom/dist/matchers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TaskPage(_ref) {\n  _s();\n\n  let {\n    userData,\n    currentProjectId,\n    currentTaskId,\n    currentTaskType,\n    updateCurrentProject,\n    updateTaskTitleValue,\n    updateTaskTagValue,\n    updateTaskContentValue,\n    togglePriorityButton,\n    toggleLikeButton,\n    deleteCommentButton,\n    createNewComment,\n    updateCommentInputValue,\n    commentInputValue,\n    deleteTaskButton,\n    changeTaskStatus\n  } = _ref;\n  console.log(userData);\n  console.log(`This is Task ${currentTaskId} of the ${currentTaskType} category of project number ${currentProjectId}`);\n  let typeStyling;\n\n  if (currentTaskType === 'To Do') {\n    typeStyling = 'ticket-container--primary';\n  } else if (currentTaskType === 'In Progress') {\n    typeStyling = 'ticket-container--yellow';\n  } else if (currentTaskType === 'Complete') {\n    typeStyling = 'ticket-container--green';\n  }\n\n  const [currentProject, setCurrentProject] = useState('Title');\n  const [currentTask, setCurrentTask] = useState({\n    \"title\": \"Task\",\n    \"comments\": []\n  });\n  useEffect(() => {\n    userData.projects.filter(project => {\n      if (project.id === currentProjectId) {\n        setCurrentProject(project);\n        updateCurrentProject(currentProjectId);\n        console.log(project);\n\n        if (currentTaskType === 'To Do') {\n          project.tasks.toDo.filter(task => {\n            if (task.id === currentTaskId) {\n              console.log(task);\n              setCurrentTask(task);\n            }\n          });\n        } else if (currentTaskType === 'In Progress') {\n          project.tasks.inProgress.filter(task => {\n            if (task.id === currentTaskId) {\n              console.log(task);\n              setCurrentTask(task);\n            }\n          });\n        } else if (currentTaskType === 'Complete') {\n          project.tasks.complete.filter(task => {\n            if (task.id === currentTaskId) {\n              console.log(task);\n              setCurrentTask(task);\n            }\n          });\n        }\n      }\n    });\n  }, []);\n\n  function handleTaskTitleChange(e) {\n    updateTaskTitleValue(e, currentTask);\n  }\n\n  function handleTaskTagChange(e) {\n    updateTaskTagValue(e, currentTask);\n  }\n\n  function handleTaskContentChange(e) {\n    updateTaskContentValue(e, currentTask);\n  } // Toggle Priority Button (Comment)\n\n\n  function togglePriorityButtonClicked(id) {\n    togglePriorityButton(currentProjectId, currentTaskType, currentTaskId, id);\n  } // Toggle Like Button (Comment)\n\n\n  function toggleLikeButtonClicked(id) {\n    toggleLikeButton(currentProjectId, currentTaskType, currentTaskId, id);\n  } // Delete Button (Comment)\n\n\n  function deleteCommentButtonClicked(id) {\n    deleteCommentButton(currentProjectId, currentTaskType, currentTaskId, id);\n  } // Create New Comment Button Clicked\n\n\n  function createNewCommentClicked(e) {\n    e.preventDefault();\n    createNewComment(currentProjectId, currentTaskId, currentTaskType);\n  } // Delete Task\n\n\n  const [deleteButtonIsOpen, setDeleteButtonIsOpen] = useState(false);\n\n  function deleteTaskButtonClicked(currentProjectId, currentTaskId, currentTaskType) {\n    setDeleteButtonIsOpen(true);\n    setTimeout(() => {\n      setDeleteButtonIsOpen(false);\n    }, 3000);\n  }\n\n  function closeDeleteOptions() {\n    setDeleteButtonIsOpen(false);\n  }\n\n  function deleteTaskCheckButton(currentProjectId, currentTaskId, currentTaskType) {\n    setDeleteButtonIsOpen(false);\n    deleteTaskButton(currentProjectId, currentTaskId, currentTaskType);\n  } // Show Status Buttons\n\n\n  const [statusButtonsShown, setStatusButtonsShown] = useState(false);\n\n  function openStatusButtonsClicked() {\n    setStatusButtonsShown(true);\n  }\n\n  function changeStatusButtonClicked(changeToStatus) {\n    // console.log(changeToStatus);\n    changeTaskStatus(changeToStatus, currentProjectId, currentTaskType, currentTaskId);\n    setStatusButtonsShown(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `ticket-container ${typeStyling}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ticket__head\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ticket__head-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ticket-info__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"ticket-info__icon fa-solid fa-ticket\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"ticket-info__subtitle\",\n            children: [\"Opened a task for \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"ticket-info__text--strong\",\n              children: currentProject.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 80\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main__head-info--top\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => handleTaskTitleChange(e),\n            className: \"ticket-info__title\",\n            value: currentTask.title,\n            placeholder: \"Add Ticket Name...\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), !deleteButtonIsOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteTaskButtonClicked(currentProjectId, currentTaskId, currentTaskType),\n            className: \"button--delete btn-transparent\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-trash-can\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 49\n          }, this), deleteButtonIsOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"delete__options-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"options-container__bar--outer\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"options-container__bar--inner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteTaskCheckButton(currentProjectId, currentTaskId, currentTaskType),\n              className: \"options-container__button btn-transparent\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"options-container__button--delete fa-solid fa-check\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => closeDeleteOptions(),\n              className: \"options-container__button btn-transparent\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"options-container__button--close fa-solid fa-xmark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ticket-info__date\",\n          children: [\"Created by \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            className: \"ticket-info__text--strong\",\n            children: currentTask.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 65\n          }, this), \" on \", currentTask.dateCreated, \" at \", currentTask.timeCreated, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ticket-info__tag-and-status\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ticket-info__tag-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"ticket-info__tag-icon fa-solid fa-hashtag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => handleTaskTagChange(e),\n          className: \"ticket-info__tag-input\",\n          value: currentTask.tag,\n          placeholder: \"Add Tag...\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), statusButtonsShown && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ticket-info__button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ticket-info__status-text\",\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeStatusButtonClicked('To Do'),\n          className: `${currentTaskType === 'To Do' && 'to-do-button--selected'} ticket-info__status-button hover--blue btn-transparent`,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-layer-group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeStatusButtonClicked('In Progress'),\n          className: `${currentTaskType === 'In Progress' && 'in-progress-button--selected'} ticket-info__status-button hover--yellow btn-transparent`,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-trowel-bricks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeStatusButtonClicked('Complete'),\n          className: `${currentTaskType === 'Complete' && 'complete-button--selected'} ticket-info__status-button hover--green btn-transparent`,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-fire\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 40\n      }, this), !statusButtonsShown && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ticket-info__button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ticket-info__status-text\",\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), currentTaskType === 'To Do' && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => openStatusButtonsClicked(),\n          className: \"ticket-info__status-button--small btn-transparent\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-layer-group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 53\n        }, this), currentTaskType === 'In Progress' && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => openStatusButtonsClicked(),\n          className: \"ticket-info__status-button--small btn-transparent\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-trowel-bricks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 59\n        }, this), currentTaskType === 'Complete' && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => openStatusButtonsClicked(),\n          className: \"ticket-info__status-button--small btn-transparent\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-fire\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 56\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ticket__description-container\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: e => handleTaskContentChange(e),\n        className: \"ticket__description\",\n        value: currentTask.content,\n        placeholder: \"Add Description...\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"comments-container__header\",\n        children: [\"Comments (\", [...currentTask.comments.filter(task => task.isDeleted === false)].length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-container__comments\",\n        children: [currentTask.comments.length !== 0 && currentTask.comments.map(comment => {\n          if (comment.isDeleted === false) {\n            return /*#__PURE__*/_jsxDEV(TaskComment, {\n              id: comment.id,\n              author: comment.author,\n              content: comment.content,\n              dateCreated: comment.dateCreated,\n              timeCreated: comment.timeCreated,\n              isPriority: comment.isPriority,\n              isLiked: comment.isLiked,\n              isDeleted: comment.isDeleted,\n              togglePriorityButtonClicked: id => togglePriorityButtonClicked(id),\n              toggleLikeButtonClicked: id => toggleLikeButtonClicked(id),\n              deleteCommentButtonClicked: id => deleteCommentButtonClicked(id)\n            }, comment.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 36\n            }, this);\n          }\n        }), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"task-page__add-task-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => updateCommentInputValue(e),\n            className: \"add-task-form__input\",\n            value: commentInputValue,\n            placeholder: \"Add a Comment...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ButtonStrong, {\n            iconClass: \"fa-solid fa-plus\",\n            text: \"Add Comment\",\n            handleClick: e => createNewCommentClicked(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), [...currentTask.comments.filter(task => task.isDeleted === false)].length === 0 && /*#__PURE__*/_jsxDEV(EmptyNotification, {\n          icon: \"fa-solid fa-envelope-open\",\n          text: \"Looks like you have no comments!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 105\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TaskPage, \"eOJINg+wTuFEdDD/xvHzX//dMzs=\");\n\n_c = TaskPage;\nexport default TaskPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskPage\");","map":{"version":3,"names":["useState","useEffect","EmptyNotification","TaskComment","ButtonStrong","toHaveAccessibleDescription","TaskPage","userData","currentProjectId","currentTaskId","currentTaskType","updateCurrentProject","updateTaskTitleValue","updateTaskTagValue","updateTaskContentValue","togglePriorityButton","toggleLikeButton","deleteCommentButton","createNewComment","updateCommentInputValue","commentInputValue","deleteTaskButton","changeTaskStatus","console","log","typeStyling","currentProject","setCurrentProject","currentTask","setCurrentTask","projects","filter","project","id","tasks","toDo","task","inProgress","complete","handleTaskTitleChange","e","handleTaskTagChange","handleTaskContentChange","togglePriorityButtonClicked","toggleLikeButtonClicked","deleteCommentButtonClicked","createNewCommentClicked","preventDefault","deleteButtonIsOpen","setDeleteButtonIsOpen","deleteTaskButtonClicked","setTimeout","closeDeleteOptions","deleteTaskCheckButton","statusButtonsShown","setStatusButtonsShown","openStatusButtonsClicked","changeStatusButtonClicked","changeToStatus","title","author","dateCreated","timeCreated","tag","content","comments","isDeleted","length","map","comment","isPriority","isLiked"],"sources":["D:/Projects/Issue_Tracker/frontend/src/components/main/pages/Task/TaskPage.js"],"sourcesContent":["\nimport { useState, useEffect } from 'react';\nimport EmptyNotification from '../../../../reusable/notifications/EmptyNotification/EmptyNotification';\nimport TaskComment from './TaskComment';\nimport './TaskPage.css';\nimport ButtonStrong from '../../../../reusable/buttons/ButtonStrong/ButtonStrong';\nimport { toHaveAccessibleDescription } from '@testing-library/jest-dom/dist/matchers';\n\nfunction TaskPage({ userData, currentProjectId, currentTaskId, currentTaskType, updateCurrentProject, updateTaskTitleValue, updateTaskTagValue, updateTaskContentValue, togglePriorityButton, toggleLikeButton, deleteCommentButton, createNewComment, updateCommentInputValue, commentInputValue, deleteTaskButton, changeTaskStatus }) {\n    console.log(userData)\n    console.log(`This is Task ${currentTaskId} of the ${currentTaskType} category of project number ${currentProjectId}`);\n\n    let typeStyling;\n    if (currentTaskType === 'To Do') {\n        typeStyling = 'ticket-container--primary';\n    } else if (currentTaskType === 'In Progress') {\n        typeStyling = 'ticket-container--yellow';\n    } else if (currentTaskType === 'Complete') {\n        typeStyling = 'ticket-container--green';\n    }\n\n    const [currentProject, setCurrentProject] = useState('Title');\n    const [currentTask, setCurrentTask] = useState({ \"title\": \"Task\", \"comments\": [] });\n    useEffect(() => {\n        userData.projects.filter(project => {\n            if (project.id === currentProjectId) {\n                setCurrentProject(project);\n                updateCurrentProject(currentProjectId);\n                console.log(project);\n                if (currentTaskType === 'To Do') {\n                    project.tasks.toDo.filter(task => {\n                        if (task.id === currentTaskId) {\n                            console.log(task);\n                            setCurrentTask(task);\n                        }\n                    })\n                } else if (currentTaskType === 'In Progress') {\n                    project.tasks.inProgress.filter(task => {\n                        if (task.id === currentTaskId) {\n                            console.log(task);\n                            setCurrentTask(task);\n                        }\n                    })\n                } else if (currentTaskType === 'Complete') {\n                    project.tasks.complete.filter(task => {\n                        if (task.id === currentTaskId) {\n                            console.log(task);\n                            setCurrentTask(task);\n                        }\n                    })\n                }\n            }\n        });\n    }, []);\n\n    function handleTaskTitleChange(e) {\n        updateTaskTitleValue(e, currentTask);\n    }\n\n    function handleTaskTagChange(e) {\n        updateTaskTagValue(e, currentTask);\n    }\n\n    function handleTaskContentChange(e) {\n        updateTaskContentValue(e, currentTask);\n    }\n\n    // Toggle Priority Button (Comment)\n    function togglePriorityButtonClicked(id) {\n        togglePriorityButton(currentProjectId, currentTaskType, currentTaskId, id);\n    }\n\n    // Toggle Like Button (Comment)\n    function toggleLikeButtonClicked(id) {\n        toggleLikeButton(currentProjectId, currentTaskType, currentTaskId, id);\n    }\n\n    // Delete Button (Comment)\n    function deleteCommentButtonClicked(id) {\n        deleteCommentButton(currentProjectId, currentTaskType, currentTaskId, id);\n    }\n\n    // Create New Comment Button Clicked\n    function createNewCommentClicked(e) {\n        e.preventDefault();\n        createNewComment(currentProjectId, currentTaskId, currentTaskType)\n    }\n\n    // Delete Task\n    const [deleteButtonIsOpen, setDeleteButtonIsOpen] = useState(false);\n    function deleteTaskButtonClicked(currentProjectId, currentTaskId, currentTaskType) {\n        setDeleteButtonIsOpen(true);\n        setTimeout(() => {\n            setDeleteButtonIsOpen(false);\n        }, 3000);\n    }\n\n    function closeDeleteOptions() {\n        setDeleteButtonIsOpen(false);\n    }\n\n    function deleteTaskCheckButton(currentProjectId, currentTaskId, currentTaskType) {\n        setDeleteButtonIsOpen(false);\n        deleteTaskButton(currentProjectId, currentTaskId, currentTaskType);\n    }\n\n    // Show Status Buttons\n    const [statusButtonsShown, setStatusButtonsShown] = useState(false);\n    function openStatusButtonsClicked() {\n        setStatusButtonsShown(true);\n    }\n    function changeStatusButtonClicked(changeToStatus) {\n        // console.log(changeToStatus);\n        changeTaskStatus(changeToStatus, currentProjectId, currentTaskType, currentTaskId);\n        setStatusButtonsShown(false);\n    }\n\n    return (\n        <div className={`ticket-container ${typeStyling}`}>\n            {/* Ticket Title Information */}\n            < div className=\"ticket__head\" >\n                <div className=\"ticket__head-info\">\n                    {/* Header */}\n                    <div className=\"ticket-info__info\">\n                        <i className=\"ticket-info__icon fa-solid fa-ticket\"></i>\n                        <p className=\"ticket-info__subtitle\">Opened a task for <strong className=\"ticket-info__text--strong\">{currentProject.title}</strong>.</p>\n                    </div>\n                    <div className=\"main__head-info--top\">\n                        <input onChange={(e) => handleTaskTitleChange(e)} className=\"ticket-info__title\" value={currentTask.title} placeholder=\"Add Ticket Name...\" type=\"text\" />\n                        {!deleteButtonIsOpen && <button onClick={() => deleteTaskButtonClicked(currentProjectId, currentTaskId, currentTaskType)} className=\"button--delete btn-transparent\">\n                            <i className=\"fa-solid fa-trash-can\"></i>\n                        </button>}\n                        {deleteButtonIsOpen && <div className=\"delete__options-container\">\n                            <div className=\"options-container__bar--outer\">\n                                <div className=\"options-container__bar--inner\"></div>\n                            </div>\n                            <button onClick={() => deleteTaskCheckButton(currentProjectId, currentTaskId, currentTaskType)} className=\"options-container__button btn-transparent\">\n                                <i className=\"options-container__button--delete fa-solid fa-check\"></i>\n                            </button>\n                            <button onClick={() => closeDeleteOptions()} className=\"options-container__button btn-transparent\">\n                                <i className=\"options-container__button--close fa-solid fa-xmark\"></i>\n                            </button>\n                        </div>}\n                    </div>\n                    {/* <input onChange={(e) => handleTaskTitleChange(e)} className=\"ticket-info__title\" value={currentTask.title} placeholder=\"Add Ticket Name...\" type=\"text\" /> */}\n                    {/* Author / Date / Time */}\n                    <p className=\"ticket-info__date\">Created by <strong className=\"ticket-info__text--strong\">{currentTask.author}</strong> on {currentTask.dateCreated} at {currentTask.timeCreated}.</p>\n                </div>\n            </div >\n            {/* Tag */}\n            <div className=\"ticket-info__tag-and-status\">\n                < div className=\"ticket-info__tag-container\" >\n                    <i className=\"ticket-info__tag-icon fa-solid fa-hashtag\"></i>\n                    <input onChange={(e) => handleTaskTagChange(e)} className=\"ticket-info__tag-input\" value={currentTask.tag} placeholder=\"Add Tag...\" type=\"text\" />\n                </div >\n                {statusButtonsShown && <div className=\"ticket-info__button-container\">\n                    <p className=\"ticket-info__status-text\">Status:</p>\n                    <button onClick={() => changeStatusButtonClicked('To Do')} className={`${currentTaskType === 'To Do' && 'to-do-button--selected'} ticket-info__status-button hover--blue btn-transparent`}>\n                        <i className=\"fa-solid fa-layer-group\"></i>\n                        {/* <p>To Do</p> */}\n                    </button>\n                    <button onClick={() => changeStatusButtonClicked('In Progress')} className={`${currentTaskType === 'In Progress' && 'in-progress-button--selected'} ticket-info__status-button hover--yellow btn-transparent`}>\n                        <i className=\"fa-solid fa-trowel-bricks\"></i>\n                        {/* <p>In Progress</p> */}\n                    </button>\n                    <button onClick={() => changeStatusButtonClicked('Complete')} className={`${currentTaskType === 'Complete' && 'complete-button--selected'} ticket-info__status-button hover--green btn-transparent`}>\n                        <i className=\"fa-solid fa-fire\"></i>\n                        {/* <p>Complete</p> */}\n                    </button>\n                </div>}\n                {!statusButtonsShown && <div className=\"ticket-info__button-container\">\n                    <p className=\"ticket-info__status-text\">Status:</p>\n                    {currentTaskType === 'To Do' && <button onClick={() => openStatusButtonsClicked()} className=\"ticket-info__status-button--small btn-transparent\">\n                        <i className=\"fa-solid fa-layer-group\"></i>\n                    </button>}\n                    {currentTaskType === 'In Progress' && <button onClick={() => openStatusButtonsClicked()} className=\"ticket-info__status-button--small btn-transparent\">\n                        <i className=\"fa-solid fa-trowel-bricks\"></i>\n                    </button>}\n                    {currentTaskType === 'Complete' && <button onClick={() => openStatusButtonsClicked()} className=\"ticket-info__status-button--small btn-transparent\">\n                        <i className=\"fa-solid fa-fire\"></i>\n                    </button>}\n                </div>}\n            </div>\n            {/* Description */}\n            <div className=\"ticket__description-container\">\n                <textarea onChange={(e) => handleTaskContentChange(e)} className=\"ticket__description\" value={currentTask.content} placeholder=\"Add Description...\" type=\"text\" />\n            </div>\n            <div className=\"comments-container\">\n                {/* <p className=\"comments-container__header\">Comments ({currentTask.comments ? currentTask.comments.length : 0})</p> */}\n                <p className=\"comments-container__header\">Comments ({\n                    [...currentTask.comments.filter(task => task.isDeleted === false)].length\n                })</p>\n\n                <div className=\"comments-container__comments\">\n                    {/* Show Comments: */}\n                    {currentTask.comments.length !== 0 && currentTask.comments.map(comment => {\n                        if (comment.isDeleted === false) {\n                            return <TaskComment\n                                key={comment.id}\n                                id={comment.id}\n                                author={comment.author}\n                                content={comment.content}\n                                dateCreated={comment.dateCreated}\n                                timeCreated={comment.timeCreated}\n                                isPriority={comment.isPriority}\n                                isLiked={comment.isLiked}\n                                isDeleted={comment.isDeleted}\n                                togglePriorityButtonClicked={(id) => togglePriorityButtonClicked(id)}\n                                toggleLikeButtonClicked={(id) => toggleLikeButtonClicked(id)}\n                                deleteCommentButtonClicked={(id) => deleteCommentButtonClicked(id)}\n                            />\n                        }\n                    })}\n                    {/* Add New Task Form */}\n                    <form className=\"task-page__add-task-form\">\n                        <input onChange={(e) => updateCommentInputValue(e)} className=\"add-task-form__input\" value={commentInputValue} placeholder=\"Add a Comment...\"></input>\n                        <ButtonStrong\n                            iconClass='fa-solid fa-plus'\n                            text='Add Comment'\n                            handleClick={(e) => createNewCommentClicked(e)}\n                        />\n                    </form>\n                    {/* No Comments: */}\n                    {[...currentTask.comments.filter(task => task.isDeleted === false)].length === 0 && <EmptyNotification\n                        icon='fa-solid fa-envelope-open'\n                        text='Looks like you have no comments!'\n                    />}\n\n                    {/* {currentTask.comments.length === 0 && <EmptyNotification\n                        icon='fa-solid fa-envelope-open'\n                        text='Looks like you have no comments!'\n                    />} */}\n                </div>\n            </div>\n        </div >\n    )\n}\n\nexport default TaskPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}