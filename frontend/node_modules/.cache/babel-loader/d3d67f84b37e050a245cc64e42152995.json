{"ast":null,"code":"import _objectSpread from\"D:/Projects/Issue_Tracker/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"D:/Projects/Issue_Tracker/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _readOnlyError from\"D:/Projects/Issue_Tracker/frontend/node_modules/@babel/runtime/helpers/esm/readOnlyError.js\";import{useEffect,useState}from'react';import'./App.css';import Aside from'./components/aside/Aside';import Main from'./components/main/Main';import IconButton from'./reusable/buttons/IconButton/IconButton';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// --- üìÖ Dates üìÖ ---\nvar days=['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];var months=['January','February','March','April','May','June','July','August','September','October','November','December'];var months_short=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];function getDay(){return days[new Date().getDay()];}function getDate(){return new Date().getDate();}function getMonth(){return months[new Date().getMonth()];}function getMonth_Short(){return months_short[new Date().getMonth()];}function _getYear(){return new Date().getFullYear();}function getFullDate(){var day=getDay();var date=getDate();var month=getMonth();var year=_getYear();return\"\".concat(day,\" \").concat(date,\" \").concat(month,\", \").concat(year);}function getShortDate(){var date=getDate();var month=getMonth_Short();var year=_getYear();return\"\".concat(date,\" \").concat(month,\", \").concat(year);}// --- ‚è∞ Times ‚è∞ ---\nfunction getCurrentTime(){var hours=new Date().getHours();var minutes=new Date().getMinutes();if(hours<10){hours=\"\".concat(0,hours);}if(minutes<10){minutes=\"\".concat(0,minutes);}return\"\".concat(hours,\":\").concat(minutes);}// --- Aside ---\nvar _useState=useState(true),_useState2=_slicedToArray(_useState,2),asideIsOpen=_useState2[0],setAsideIsOpen=_useState2[1];// Toggle Aside\nfunction toggleAside(){setAsideIsOpen(!asideIsOpen);}// Open Aside\nfunction openAside(){setAsideIsOpen(true);}// --- PAGES ---\nvar _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),dashboardIsOpen=_useState4[0],setDashboardIsOpen=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),projectsIsOpen=_useState6[0],setProjectsIsOpen=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),reportsIsOpen=_useState8[0],setReportsIsOpen=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),messagesIsOpen=_useState10[0],setMessagesIsOpen=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),settingsIsOpen=_useState12[0],setSettingsIsOpen=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),projectPageIsOpen=_useState14[0],setProjectPageIsOpen=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),taskPageIsOpen=_useState16[0],setTaskPageIsOpen=_useState16[1];// Aside Button Clicked:\nfunction asideButtonClicked(title){if(title==='Dashboard'){openDashboard();}else if(title==='Projects'){_openProjects();}else if(title==='Reports'){_openReports();}else if(title==='Messages'){_openMessages();}else if(title==='Settings'){openSettings();}}// Aside Function (depending on button clicked):\nfunction openDashboard(){console.log('Dashboard Opened!');_updateCurrentPageName('Dashboard');setDashboardIsOpen(true);setProjectsIsOpen(false);setReportsIsOpen(false);setMessagesIsOpen(false);setSettingsIsOpen(false);setProjectPageIsOpen(false);setTaskPageIsOpen(false);}function _openProjects(){console.log('Projects Opened!');// setAsideIsOpen(true);\n_updateCurrentPageName('Projects');setDashboardIsOpen(false);setProjectsIsOpen(true);setReportsIsOpen(false);setMessagesIsOpen(false);setSettingsIsOpen(false);setProjectPageIsOpen(false);setTaskPageIsOpen(false);}function _openReports(){console.log('Reports Opened!');_updateCurrentPageName('Reports');setDashboardIsOpen(false);setProjectsIsOpen(false);setReportsIsOpen(true);setMessagesIsOpen(false);setSettingsIsOpen(false);setProjectPageIsOpen(false);setTaskPageIsOpen(false);}function _openMessages(){console.log('Messages Opened!');_updateCurrentPageName('Messages');setDashboardIsOpen(false);setProjectsIsOpen(false);setReportsIsOpen(false);setMessagesIsOpen(true);setSettingsIsOpen(false);setProjectPageIsOpen(false);setTaskPageIsOpen(false);}function openSettings(){console.log('Settings Opened!');_updateCurrentPageName('Settings');setDashboardIsOpen(false);setProjectsIsOpen(false);setReportsIsOpen(false);setMessagesIsOpen(false);setSettingsIsOpen(true);setProjectPageIsOpen(false);setTaskPageIsOpen(false);}// OPEN PROJECT\nvar _useState17=useState(null),_useState18=_slicedToArray(_useState17,2),currentProjectId=_useState18[0],setCurrentProjectId=_useState18[1];function _openProjectPage(id){console.log('Project Page Opened!');_updateCurrentPageName('Project Page');setDashboardIsOpen(false);setProjectsIsOpen(false);setReportsIsOpen(false);setMessagesIsOpen(false);setSettingsIsOpen(false);setProjectPageIsOpen(true);setTaskPageIsOpen(false);userData.projects.map(function(project){if(project.id===id){// console.log('ID is ' + project);\nconsole.log(project);setCurrentProjectId(project.id);}console.log(\"Opening Project ID \".concat(id));});}// OPEN TASK\nfunction _openTaskPage(){console.log('Task Page Opened!');_updateCurrentPageName('Task Page');setDashboardIsOpen(false);setProjectsIsOpen(false);setReportsIsOpen(false);setMessagesIsOpen(false);setSettingsIsOpen(false);setProjectPageIsOpen(false);setTaskPageIsOpen(true);}function _updateCurrentPageName(page){setCurrentPageName(page);}// ----- üî® EDITING PROJECT VALUES üî® -----\n// Update Input Value:\nfunction _updateInputValue(e,target){target.title=e.target.value;// console.log(target);\nupdateAll();}// --- USER DETAILS ---\nvar _useState19=useState('Dashboard'),_useState20=_slicedToArray(_useState19,2),currentPageName=_useState20[0],setCurrentPageName=_useState20[1];// const [username, setUsername] = useState('Admin');\nvar _useState21=useState({\"username\":\"Admin\",\"projects\":[// --- START OF PROJECTS ---\n{\"id\":1,\"title\":\"Getting Started\",\"author\":\"Botty Bot\",\"timeCreated\":getCurrentTime(),\"dateCreated\":getFullDate(),\"tasks\":{\"toDo\":[{\"id\":1,\"title\":\"Create Your Own Project!\",\"author\":\"Botty Bot\",\"content\":\"Use ByeBug to plan and organise your own projects.\",\"tag\":\"Setup\",\"timeCreated\":getCurrentTime(),\"dateCreated\":getFullDate(),\"dateCreatedShort\":getShortDate(),\"comments\":[{\"id\":1,\"author\":\"Botty Bot\",\"content\":\"You can create your own project by navigating to the 'Projects' page and pressing the 'Create Project' button!\",\"dateCreated\":getFullDate(),\"timeCreated\":getCurrentTime(),\"isPriority\":false,\"isLiked\":false,\"isDeleted\":false},{\"id\":2,\"author\":\"Botty Bot\",\"content\":\"You can change the status of your current task by pressing the icon next to 'Status'.\",\"dateCreated\":getFullDate(),\"timeCreated\":getCurrentTime(),\"isPriority\":false,\"isLiked\":false,\"isDeleted\":false}],\"isDeleted\":false}],\"inProgress\":[],\"complete\":[]},\"isDeleted\":false,\"isComplete\":false}],\"reports\":[],\"messages\":[{\"id\":1,\"title\":\"Welcome to ByeBug!\",\"content\":\"Hello! Welcome to ByeBug - the place to break down your projects into smaller, manageable tasks! Navigate to the 'Projects' page and get started right away! We hope you have a pleasant experience organising your work!\",\"author\":\"Botty Bot\",\"timeCreated\":getCurrentTime(),\"dateCreated\":getFullDate(),\"isRead\":false,\"isDeleted\":false}]}),_useState22=_slicedToArray(_useState21,2),userData=_useState22[0],setUserData=_useState22[1];// Change Message isRead to true:\nfunction _updateMessageIsRead(id){userData.messages.filter(function(message){if(message.id===id){message.isRead=true;console.log(message);updateAll();}});}// Change Report isRead to true:\nfunction _updateReportIsRead(id){userData.reports.filter(function(report){if(report.id===id){report.isRead=true;console.log(report);updateAll();}});}// *Function to re-render userData once updated:\nfunction updateAll(){setUserData(_objectSpread({},userData));}// Create New Message Function (currently inactive)\nfunction createNewMessage(title,author,timeCreated,dateCreated,content,isRead,isDeleted){userData.messages.push({\"id\":userData.messages.length+1,\"title\":\"New One\",\"author\":\"Botty Bot\",\"timeCreated\":'18:30',\"dateCreated\":'Tuesday 13 August, 2022',\"content\":\"Hello, this is some example message content just to check out how it looks once it is rendered in the broswer. Thanks!\",\"isRead\":false,\"isDeleted\":false});updateAll();console.log(userData.messages);}// Create New Report Function (current inactive)\nfunction createNewReport(title,content,timeCreated,dateCreated,reportType,isRead,isDeleted){userData.reports.push({\"id\":userData.reports.length+1,\"title\":title,\"content\":content,\"timeCreated\":timeCreated,\"dateCreated\":dateCreated,\"reportType\":reportType,\"isRead\":isRead,\"isDeleted\":isDeleted});updateAll();console.log(userData.reports);}// Create New Project\nfunction _createNewProject(projectName){userData.projects.push({\"id\":userData.projects.length+1,\"title\":projectName,\"author\":userData.username,\"timeCreated\":getCurrentTime(),\"dateCreated\":getFullDate(),\"tasks\":{\"toDo\":[],\"inProgress\":[],\"complete\":[]},\"isDeleted\":false,\"isComplete\":false});updateAll();_openProjectPage(userData.projects.length);console.log(userData.projects);}// Create New Project Task:\nfunction _createNewTask(projectId,taskType){// console.log(`This is a '${taskType}' for project ID ${projectId}`);\nuserData.projects.filter(function(project){if(project.id===projectId){if(taskType==='To Do'){project.tasks.toDo.push({\"id\":project.tasks.toDo.length+1,\"title\":\"\",\"author\":userData.username,\"content\":\"\",\"tag\":\"\",\"timeCreated\":getCurrentTime(),\"dateCreated\":getFullDate(),\"dateCreatedShort\":getShortDate(),\"comments\":[],\"isDeleted\":false});_openTaskPage(project.tasks.toDo.length,'To Do',projectId);}else if(taskType==='In Progress'){project.tasks.inProgress.push({\"id\":project.tasks.inProgress.length+1,\"title\":\"\",\"author\":userData.username,\"content\":\"\",\"tag\":\"\",\"timeCreated\":getCurrentTime(),\"dateCreated\":getFullDate(),\"dateCreatedShort\":getShortDate(),\"comments\":[],\"isDeleted\":false});_openTaskPage(project.tasks.inProgress.length,'In Progress',projectId);}else if(taskType==='Complete'){project.tasks.complete.push({\"id\":project.tasks.complete.length+1,\"title\":\"\",\"author\":userData.username,\"content\":\"\",\"tag\":\"\",\"timeCreated\":getCurrentTime(),\"dateCreated\":getFullDate(),\"dateCreatedShort\":getShortDate(),\"comments\":[],\"isDeleted\":false});_openTaskPage(project.tasks.complete.length,'Complete',projectId);}updateAll();}});}// Open Project Task Page\nvar _useState23=useState(null),_useState24=_slicedToArray(_useState23,2),currentTaskId=_useState24[0],setCurrentTaskId=_useState24[1];var _useState25=useState(null),_useState26=_slicedToArray(_useState25,2),currentTaskType=_useState26[0],setCurrentTaskType=_useState26[1];function _openTaskPage(taskId,taskType,currentProjectId){// console.log(`This is task ${taskId} of the ${taskType} category for project ${currentProjectId}`);\nsetCurrentPageName('Task Page');setCurrentTaskId(taskId);setCurrentTaskType(taskType);setCurrentProjectId(currentProjectId);// Need to pass these 3 values into Main.js and into TaskPage.js\n}// Back Button from TaskPage to Project Page ---\nfunction _updateCurrentProject(id){setCurrentProjectId(id);}function _taskBackButtonClicked(){_openProjectPage(currentProjectId);}// ---\n// UPDATE INPUT VALUES OF TASK PAGE\nfunction _updateTaskTitleValue(e,target){// console.log(e.target.value)\n// console.log(target.title)\ntarget.title=e.target.value;updateAll();}function _updateTaskTagValue(e,target){target.tag=e.target.value;updateAll();}function _updateTaskContentValue(e,target){target.content=e.target.value;updateAll();}// Toggle Priority Button (Comment)\nfunction _togglePriorityButton(currentProjectId,currentTaskType,currentTaskId,id){userData.projects.filter(function(project){if(project.id===currentProjectId){if(currentTaskType==='To Do'){// console.log(project.tasks.toDo);\nproject.tasks.toDo.filter(function(task){if(task.id===currentTaskId){// console.log(task.comments);\ntask.comments.filter(function(comment){if(comment.id===id){comment.isPriority=!comment.isPriority;console.log(comment.isPriority);}});}});}else if(currentTaskType==='In Progress'){// console.log(project.tasks.inProgress);\nproject.tasks.inProgress.filter(function(task){if(task.id===currentTaskId){// console.log(task.comments);\ntask.comments.filter(function(comment){if(comment.id===id){comment.isPriority=!comment.isPriority;}});}});}else if(currentTaskType==='Complete'){// console.log(project.tasks.complete);\nproject.tasks.complete.filter(function(task){if(task.id===currentTaskId){// console.log(task.comments);\ntask.comments.filter(function(comment){if(comment.id===id){comment.isPriority=!comment.isPriority;}});}});}}});updateAll();}// Toggle Like Button (Comment)\nfunction _toggleLikeButton(currentProjectId,currentTaskType,currentTaskId,id){userData.projects.filter(function(project){if(project.id===currentProjectId){if(currentTaskType==='To Do'){// console.log(project.tasks.toDo);\nproject.tasks.toDo.filter(function(task){if(task.id===currentTaskId){// console.log(task.comments);\ntask.comments.filter(function(comment){if(comment.id===id){comment.isLiked=!comment.isLiked;}});}});}else if(currentTaskType==='In Progress'){// console.log(project.tasks.inProgress);\nproject.tasks.inProgress.filter(function(task){if(task.id===currentTaskId){// console.log(task.comments);\ntask.comments.filter(function(comment){if(comment.id===id){comment.isLiked=!comment.isLiked;}});}});}else if(currentTaskType==='Complete'){// console.log(project.tasks.complete);\nproject.tasks.complete.filter(function(task){if(task.id===currentTaskId){// console.log(task.comments);\ntask.comments.filter(function(comment){if(comment.id===id){comment.isLiked=!comment.isLiked;}});}});}}});updateAll();}// Delete Button (Comment)\nfunction _deleteCommentButton(currentProjectId,currentTaskType,currentTaskId,id){userData.projects.filter(function(project){if(project.id===currentProjectId){if(currentTaskType==='To Do'){// console.log(project.tasks.toDo);\nproject.tasks.toDo.filter(function(task){if(task.id===currentTaskId){// console.log(task.comments);\ntask.comments.filter(function(comment){if(comment.id===id){comment.isDeleted=true;}});}});}else if(currentTaskType==='In Progress'){// console.log(project.tasks.inProgress);\nproject.tasks.inProgress.filter(function(task){if(task.id===currentTaskId){// console.log(task.comments);\ntask.comments.filter(function(comment){if(comment.id===id){comment.isDeleted=true;}});}});}else if(currentTaskType==='Complete'){// console.log(project.tasks.complete);\nproject.tasks.complete.filter(function(task){if(task.id===currentTaskId){// console.log(task.comments);\ntask.comments.filter(function(comment){if(comment.id===id){comment.isDeleted=true;}});}});}}});updateAll();}// Create New Comment\nvar _useState27=useState(''),_useState28=_slicedToArray(_useState27,2),commentInputValue=_useState28[0],setCommentInputValue=_useState28[1];function _updateCommentInputValue(e){setCommentInputValue(e.target.value);updateAll();}function _createNewComment(currentProjectId,currentTaskId,currentTaskType){if(commentInputValue!==''){userData.projects.filter(function(project){if(project.id===currentProjectId){if(currentTaskType==='To Do'){// console.log(project.tasks.toDo);\nproject.tasks.toDo.filter(function(task){if(task.id===currentTaskId){// console.log(task);\ntask.comments.push({\"id\":task.comments.length+1,\"author\":userData.username,\"content\":commentInputValue,\"dateCreated\":getFullDate(),\"timeCreated\":getCurrentTime(),\"isPriority\":false,\"isLiked\":false,\"isDeleted\":false});}});}else if(currentTaskType==='In Progress'){// console.log(project.tasks.inProgress);\nproject.tasks.inProgress.filter(function(task){if(task.id===currentTaskId){// console.log(task);\ntask.comments.push({\"id\":task.comments.length+1,\"author\":userData.username,\"content\":commentInputValue,\"dateCreated\":getFullDate(),\"timeCreated\":getCurrentTime(),\"isPriority\":false,\"isLiked\":false,\"isDeleted\":false});}});}else if(currentTaskType==='Complete'){// console.log(project.tasks.complete);\nproject.tasks.complete.filter(function(task){if(task.id===currentTaskId){// console.log(task);\ntask.comments.push({\"id\":task.comments.length+1,\"author\":userData.username,\"content\":commentInputValue,\"dateCreated\":getFullDate(),\"timeCreated\":getCurrentTime(),\"isPriority\":false,\"isLiked\":false,\"isDeleted\":false});}});}}});setCommentInputValue('');updateAll();}}function _deleteProjectButton(currentProjectId){// console.log(currentProjectId)\nuserData.projects.filter(function(project){if(project.id===currentProjectId){project.isDeleted=true;// console.log(project);\ncreateNewReport('Project Deleted',\"'\".concat(project.title,\"' was deleted by \").concat(userData.username,\".\"),getCurrentTime(),getFullDate(),'Warning',false,false);}});updateAll();setCurrentPageName('Projects');}function _deleteTaskButton(currentProjectId,currentTaskId,currentTaskType){// console.log('Task deleted')\nuserData.projects.filter(function(project){if(project.id===currentProjectId){// console.log(project)\nif(currentTaskType==='To Do'){project.tasks.toDo.filter(function(task){if(task.id===currentTaskId){task.isDeleted=true;// console.log(task)\ncreateNewReport('Task Deleted',\"A task with the title of '\".concat(task.title,\"' was deleted from project '\").concat(project.title,\"' by \").concat(userData.username,\". This task was in the 'To Do' category at the time of deletion.\"),getCurrentTime(),getFullDate(),'Warning',false,false);}});}else if(currentTaskType==='In Progress'){project.tasks.inProgress.filter(function(task){if(task.id===currentTaskId){task.isDeleted=true;// console.log(task)\ncreateNewReport('Task Deleted',\"A task with the title of '\".concat(task.title,\"' was deleted from project '\").concat(project.title,\"' by \").concat(userData.username,\". This task was in the 'In Progress' category at the time of deletion.\"),getCurrentTime(),getFullDate(),'Warning',false,false);}});}else if(currentTaskType==='Complete'){project.tasks.complete.filter(function(task){if(task.id===currentTaskId){task.isDeleted=true;// console.log(task)\ncreateNewReport('Task Deleted',\"A task with the title of '\".concat(task.title,\"' was deleted from project '\").concat(project.title,\"' by \").concat(userData.username,\". This task was in the 'Complete' category at the time of deletion.\"),getCurrentTime(),getFullDate(),'Warning',false,false);}});}}});updateAll();setCurrentPageName('Project Page');}// Change Task Status\nfunction _changeTaskStatus(changeToStatus,currentProjectId,currentTaskType,currentTaskId){// console.log(changeToStatus);\nuserData.projects.filter(function(project){if(project.id===currentProjectId){// console.log(project);\nif(currentTaskType==='To Do'){project.tasks.toDo.filter(function(task){if(task.id===currentTaskId){var newTask=_objectSpread({},task);if(changeToStatus==='To Do'){newTask.id=project.tasks.toDo.length+1;project.tasks.toDo.push(newTask);_openTaskPage(project.tasks.toDo.length,'To Do',newTask.id);}else if(changeToStatus==='In Progress'){newTask.id=project.tasks.inProgress.length+1;project.tasks.inProgress.push(newTask);_openTaskPage(project.tasks.inProgress.length,'In Progress',newTask.id);}else if(changeToStatus==='Complete'){newTask.id=project.tasks.complete.length+1;project.tasks.complete.push(newTask);_openTaskPage(project.tasks.complete.length,'Complete',newTask.id);}task.isDeleted=true;// console.log(project);\n}});}else if(currentTaskType==='In Progress'){project.tasks.inProgress.filter(function(task){if(task.id===currentTaskId){var newTask=_objectSpread({},task);if(changeToStatus==='To Do'){newTask.id=project.tasks.toDo.length+1;project.tasks.toDo.push(newTask);_openTaskPage(project.tasks.toDo.length,'To Do',newTask.id);}else if(changeToStatus==='In Progress'){newTask.id=project.tasks.inProgress.length+1;project.tasks.inProgress.push(newTask);_openTaskPage(project.tasks.inProgress.length,'In Progress',newTask.id);}else if(changeToStatus==='Complete'){newTask.id=project.tasks.complete.length+1;project.tasks.complete.push(newTask);_openTaskPage(project.tasks.complete.length,'Complete',newTask.id);}task.isDeleted=true;// console.log(task);\n}});}else if(currentTaskType==='Complete'){project.tasks.complete.filter(function(task){if(task.id===currentTaskId){var newTask=_objectSpread({},task);if(changeToStatus==='To Do'){newTask.id=project.tasks.toDo.length+1;project.tasks.toDo.push(newTask);_openTaskPage(project.tasks.toDo.length,'To Do',newTask.id);}else if(changeToStatus==='In Progress'){newTask.id=project.tasks.inProgress.length+1;project.tasks.inProgress.push(newTask);_openTaskPage(project.tasks.inProgress.length,'In Progress',newTask.id);}else if(changeToStatus==='Complete'){newTask.id=project.tasks.complete.length+1;project.tasks.complete.push(newTask);_openTaskPage(project.tasks.complete.length,'Complete',newTask.id);}task.isDeleted=true;// console.log(task);\n}});}}});setCurrentProjectId(currentProjectId);updateAll();}function _deleteMessage(id){// console.log(`Message ${id} is deleted`);\nuserData.messages.filter(function(message){if(message.id===id){message.isDeleted=true;}});updateAll();}function _deleteReport(id){// console.log(`Report ${id} is deleted`);\nuserData.reports.filter(function(report){if(report.id===id){report.isDeleted=true;}});updateAll();}return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:asideIsOpen?'aside-container':'aside-container aside-container-disabled',children:[/*#__PURE__*/_jsx(IconButton,{iconClass:\"aside-container__button \".concat(asideIsOpen?'fa-solid fa-angles-left':'fa-solid fa-angles-right'),handleClick:function handleClick(){return toggleAside();}}),/*#__PURE__*/_jsx(Aside,{asideIsOpen:asideIsOpen,handleClick:function handleClick(title){return asideButtonClicked(title);},updateCurrentPageName:function updateCurrentPageName(){return _updateCurrentPageName('Projects');},userData:userData,createNewProject:function createNewProject(projectName){return _createNewProject(projectName);},openProjectPage:function openProjectPage(id){return _openProjectPage(id);}})]}),/*#__PURE__*/_jsx(\"div\",{className:\"main-container\",children:/*#__PURE__*/_jsx(Main,{currentPageName:currentPageName,updateCurrentPageName:function updateCurrentPageName(page){return _updateCurrentPageName(page);},getYear:function getYear(){return _getYear();},userData:userData,updateMessageIsRead:function updateMessageIsRead(id){return _updateMessageIsRead(id);},updateReportIsRead:function updateReportIsRead(id){return _updateReportIsRead(id);},createNewProject:function createNewProject(projectName){return _createNewProject(projectName);},openProjectPage:function openProjectPage(id){return _openProjectPage(id);},currentProjectId:currentProjectId,openProjects:function openProjects(){return _openProjects();},updateInputValue:function updateInputValue(e,target){return _updateInputValue(e,target);},asideIsOpen:asideIsOpen,createNewTask:function createNewTask(projectId,taskType){return _createNewTask(projectId,taskType);},openTaskPage:function openTaskPage(taskId,taskType,currentProjectId){return _openTaskPage(taskId,taskType,currentProjectId);},currentTaskId:currentTaskId,currentTaskType:currentTaskType,updateCurrentProject:function updateCurrentProject(id){return _updateCurrentProject(id);},taskBackButtonClicked:function taskBackButtonClicked(){return _taskBackButtonClicked();},updateTaskTitleValue:function updateTaskTitleValue(e,target){return _updateTaskTitleValue(e,target);},updateTaskTagValue:function updateTaskTagValue(e,target){return _updateTaskTagValue(e,target);},updateTaskContentValue:function updateTaskContentValue(e,target){return _updateTaskContentValue(e,target);},togglePriorityButton:function togglePriorityButton(currentProjectId,currentTaskType,currentTaskId,id){return _togglePriorityButton(currentProjectId,currentTaskType,currentTaskId,id);},toggleLikeButton:function toggleLikeButton(currentProjectId,currentTaskType,currentTaskId,id){return _toggleLikeButton(currentProjectId,currentTaskType,currentTaskId,id);},deleteCommentButton:function deleteCommentButton(currentProjectId,currentTaskType,currentTaskId,id){return _deleteCommentButton(currentProjectId,currentTaskType,currentTaskId,id);},createNewComment:function createNewComment(currentProjectId,currentTaskId,currentTaskType){return _createNewComment(currentProjectId,currentTaskId,currentTaskType);},updateCommentInputValue:function updateCommentInputValue(e){return _updateCommentInputValue(e);},commentInputValue:commentInputValue,deleteProjectButton:function deleteProjectButton(currentProjectId){return _deleteProjectButton(currentProjectId);},deleteTaskButton:function deleteTaskButton(currentProjectId,currentTaskId,currentTaskType){return _deleteTaskButton(currentProjectId,currentTaskId,currentTaskType);},changeTaskStatus:function changeTaskStatus(changeToStatus,currentProjectId,currentTaskType,currentTaskId){return _changeTaskStatus(changeToStatus,currentProjectId,currentTaskType,currentTaskId);},openReports:function openReports(){return _openReports();},openMessages:function openMessages(){return _openMessages();},deleteMessage:function deleteMessage(id){return _deleteMessage(id);},deleteReport:function deleteReport(id){return _deleteReport(id);}})})]})});}export default App;","map":{"version":3,"names":["useEffect","useState","Aside","Main","IconButton","App","days","months","months_short","getDay","Date","getDate","getMonth","getMonth_Short","getYear","getFullYear","getFullDate","day","date","month","year","getShortDate","getCurrentTime","hours","getHours","minutes","getMinutes","asideIsOpen","setAsideIsOpen","toggleAside","openAside","dashboardIsOpen","setDashboardIsOpen","projectsIsOpen","setProjectsIsOpen","reportsIsOpen","setReportsIsOpen","messagesIsOpen","setMessagesIsOpen","settingsIsOpen","setSettingsIsOpen","projectPageIsOpen","setProjectPageIsOpen","taskPageIsOpen","setTaskPageIsOpen","asideButtonClicked","title","openDashboard","openProjects","openReports","openMessages","openSettings","console","log","updateCurrentPageName","currentProjectId","setCurrentProjectId","openProjectPage","id","userData","projects","map","project","openTaskPage","page","setCurrentPageName","updateInputValue","e","target","value","updateAll","currentPageName","setUserData","updateMessageIsRead","messages","filter","message","isRead","updateReportIsRead","reports","report","createNewMessage","author","timeCreated","dateCreated","content","isDeleted","push","length","createNewReport","reportType","createNewProject","projectName","username","createNewTask","projectId","taskType","tasks","toDo","inProgress","complete","currentTaskId","setCurrentTaskId","currentTaskType","setCurrentTaskType","taskId","updateCurrentProject","taskBackButtonClicked","updateTaskTitleValue","updateTaskTagValue","tag","updateTaskContentValue","togglePriorityButton","task","comments","comment","isPriority","toggleLikeButton","isLiked","deleteCommentButton","commentInputValue","setCommentInputValue","updateCommentInputValue","createNewComment","deleteProjectButton","deleteTaskButton","changeTaskStatus","changeToStatus","newTask","deleteMessage","deleteReport"],"sources":["D:/Projects/Issue_Tracker/frontend/src/App.js"],"sourcesContent":["\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Aside from './components/aside/Aside';\nimport Main from './components/main/Main';\nimport IconButton from './reusable/buttons/IconButton/IconButton';\n\nfunction App() {\n  // --- üìÖ Dates üìÖ ---\n  const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const months_short = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n  function getDay() {\n    return days[new Date().getDay()];\n  }\n  function getDate() {\n    return new Date().getDate();\n  }\n  function getMonth() {\n    return months[new Date().getMonth()];\n  }\n  function getMonth_Short() {\n    return months_short[new Date().getMonth()];\n  }\n  function getYear() {\n    return new Date().getFullYear();\n  }\n  function getFullDate() {\n    const day = getDay();\n    const date = getDate();\n    const month = getMonth();\n    const year = getYear();\n    return `${day} ${date} ${month}, ${year}`;\n  }\n\n  function getShortDate() {\n    const date = getDate();\n    const month = getMonth_Short();\n    const year = getYear();\n    return `${date} ${month}, ${year}`;\n  }\n\n  // --- ‚è∞ Times ‚è∞ ---\n  function getCurrentTime() {\n    let hours = new Date().getHours();\n    let minutes = new Date().getMinutes();\n\n    if (hours < 10) {\n      hours = `${0}${hours}`;\n    }\n\n    if (minutes < 10) {\n      minutes = `${0}${minutes}`;\n    }\n\n    return `${hours}:${minutes}`;\n  }\n\n  // --- Aside ---\n  const [asideIsOpen, setAsideIsOpen] = useState(true);\n  // Toggle Aside\n  function toggleAside() {\n    setAsideIsOpen(!asideIsOpen);\n  }\n  // Open Aside\n  function openAside() {\n    setAsideIsOpen(true);\n  }\n\n\n  // --- PAGES ---\n  const [dashboardIsOpen, setDashboardIsOpen] = useState(true);\n  const [projectsIsOpen, setProjectsIsOpen] = useState(false);\n  const [reportsIsOpen, setReportsIsOpen] = useState(false);\n  const [messagesIsOpen, setMessagesIsOpen] = useState(false);\n  const [settingsIsOpen, setSettingsIsOpen] = useState(false);\n\n  const [projectPageIsOpen, setProjectPageIsOpen] = useState(false);\n  const [taskPageIsOpen, setTaskPageIsOpen] = useState(false);\n\n  // Aside Button Clicked:\n  function asideButtonClicked(title) {\n    if (title === 'Dashboard') {\n      openDashboard();\n    } else if (title === 'Projects') {\n      openProjects();\n    } else if (title === 'Reports') {\n      openReports();\n    } else if (title === 'Messages') {\n      openMessages();\n    } else if (title === 'Settings') {\n      openSettings();\n    }\n  }\n\n  // Aside Function (depending on button clicked):\n  function openDashboard() {\n    console.log('Dashboard Opened!')\n    updateCurrentPageName('Dashboard');\n\n    setDashboardIsOpen(true);\n    setProjectsIsOpen(false);\n    setReportsIsOpen(false);\n    setMessagesIsOpen(false);\n    setSettingsIsOpen(false);\n    setProjectPageIsOpen(false);\n    setTaskPageIsOpen(false);\n  }\n\n  function openProjects() {\n    console.log('Projects Opened!');\n    // setAsideIsOpen(true);\n    updateCurrentPageName('Projects');\n\n    setDashboardIsOpen(false);\n    setProjectsIsOpen(true);\n    setReportsIsOpen(false);\n    setMessagesIsOpen(false);\n    setSettingsIsOpen(false);\n    setProjectPageIsOpen(false);\n    setTaskPageIsOpen(false);\n  }\n\n  function openReports() {\n    console.log('Reports Opened!')\n    updateCurrentPageName('Reports');\n\n    setDashboardIsOpen(false);\n    setProjectsIsOpen(false);\n    setReportsIsOpen(true);\n    setMessagesIsOpen(false);\n    setSettingsIsOpen(false);\n    setProjectPageIsOpen(false);\n    setTaskPageIsOpen(false);\n  }\n\n  function openMessages() {\n    console.log('Messages Opened!')\n    updateCurrentPageName('Messages');\n\n    setDashboardIsOpen(false);\n    setProjectsIsOpen(false);\n    setReportsIsOpen(false);\n    setMessagesIsOpen(true);\n    setSettingsIsOpen(false);\n    setProjectPageIsOpen(false);\n    setTaskPageIsOpen(false);\n  }\n\n  function openSettings() {\n    console.log('Settings Opened!')\n    updateCurrentPageName('Settings');\n\n    setDashboardIsOpen(false);\n    setProjectsIsOpen(false);\n    setReportsIsOpen(false);\n    setMessagesIsOpen(false);\n    setSettingsIsOpen(true);\n    setProjectPageIsOpen(false);\n    setTaskPageIsOpen(false);\n  }\n\n\n  // OPEN PROJECT\n  const [currentProjectId, setCurrentProjectId] = useState(null);\n\n  function openProjectPage(id) {\n    console.log('Project Page Opened!')\n    updateCurrentPageName('Project Page');\n\n    setDashboardIsOpen(false);\n    setProjectsIsOpen(false);\n    setReportsIsOpen(false);\n    setMessagesIsOpen(false);\n    setSettingsIsOpen(false);\n    setProjectPageIsOpen(true);\n    setTaskPageIsOpen(false);\n\n    userData.projects.map(project => {\n      if (project.id === id) {\n        // console.log('ID is ' + project);\n        console.log(project);\n        setCurrentProjectId(project.id);\n      }\n      console.log(`Opening Project ID ${id}`);\n    });\n  }\n\n  // OPEN TASK\n  function openTaskPage() {\n    console.log('Task Page Opened!')\n    updateCurrentPageName('Task Page');\n\n    setDashboardIsOpen(false);\n    setProjectsIsOpen(false);\n    setReportsIsOpen(false);\n    setMessagesIsOpen(false);\n    setSettingsIsOpen(false);\n    setProjectPageIsOpen(false);\n    setTaskPageIsOpen(true);\n  }\n\n  function updateCurrentPageName(page) {\n    setCurrentPageName(page);\n  }\n  // ----- üî® EDITING PROJECT VALUES üî® -----\n  // Update Input Value:\n  function updateInputValue(e, target) {\n    target.title = e.target.value;\n    // console.log(target);\n    updateAll();\n  }\n\n\n  // --- USER DETAILS ---\n  const [currentPageName, setCurrentPageName] = useState('Dashboard');\n  // const [username, setUsername] = useState('Admin');\n  const [userData, setUserData] = useState(\n    {\n      \"username\": \"Admin\",\n      \"projects\": [\n        // --- START OF PROJECTS ---\n        {\n          \"id\": 1,\n          \"title\": \"Getting Started\",\n          \"author\": \"Botty Bot\",\n          \"timeCreated\": getCurrentTime(),\n          \"dateCreated\": getFullDate(),\n          \"tasks\": {\n            \"toDo\": [\n              {\n                \"id\": 1,\n                \"title\": \"Create Your Own Project!\",\n                \"author\": \"Botty Bot\",\n                \"content\": \"Use ByeBug to plan and organise your own projects.\",\n                \"tag\": \"Setup\",\n                \"timeCreated\": getCurrentTime(),\n                \"dateCreated\": getFullDate(),\n                \"dateCreatedShort\": getShortDate(),\n                \"comments\": [\n                  {\n                    \"id\": 1,\n                    \"author\": \"Botty Bot\",\n                    \"content\": \"You can create your own project by navigating to the 'Projects' page and pressing the 'Create Project' button!\",\n                    \"dateCreated\": getFullDate(),\n                    \"timeCreated\": getCurrentTime(),\n                    \"isPriority\": false,\n                    \"isLiked\": false,\n                    \"isDeleted\": false\n                  },\n                  {\n                    \"id\": 2,\n                    \"author\": \"Botty Bot\",\n                    \"content\": \"You can change the status of your current task by pressing the icon next to 'Status'.\",\n                    \"dateCreated\": getFullDate(),\n                    \"timeCreated\": getCurrentTime(),\n                    \"isPriority\": false,\n                    \"isLiked\": false,\n                    \"isDeleted\": false\n                  },\n                ],\n                \"isDeleted\": false,\n              },\n            ],\n            \"inProgress\": [],\n            \"complete\": [],\n          },\n          \"isDeleted\": false,\n          \"isComplete\": false,\n        }\n      ],\n      \"reports\": [\n      ],\n      \"messages\": [\n        {\n          \"id\": 1,\n          \"title\": \"Welcome to ByeBug!\",\n          \"content\": `Hello! Welcome to ByeBug - the place to break down your projects into smaller, manageable tasks! Navigate to the 'Projects' page and get started right away! We hope you have a pleasant experience organising your work!`,\n          \"author\": \"Botty Bot\",\n          \"timeCreated\": getCurrentTime(),\n          \"dateCreated\": getFullDate(),\n          \"isRead\": false,\n          \"isDeleted\": false\n        },\n      ]\n    }\n  )\n\n  // Change Message isRead to true:\n  function updateMessageIsRead(id) {\n    userData.messages.filter(message => {\n      if (message.id === id) {\n        message.isRead = true;\n        console.log(message);\n        updateAll();\n      }\n    })\n  }\n\n  // Change Report isRead to true:\n  function updateReportIsRead(id) {\n    userData.reports.filter(report => {\n      if (report.id === id) {\n        report.isRead = true;\n        console.log(report);\n        updateAll();\n      }\n    })\n  }\n\n  // *Function to re-render userData once updated:\n  function updateAll() {\n    setUserData({ ...userData });\n  }\n\n  // Create New Message Function (currently inactive)\n  function createNewMessage(title, author, timeCreated, dateCreated, content, isRead, isDeleted) {\n    userData.messages.push(\n      {\n        \"id\": userData.messages.length + 1,\n        \"title\": \"New One\",\n        \"author\": \"Botty Bot\",\n        \"timeCreated\": '18:30',\n        \"dateCreated\": 'Tuesday 13 August, 2022',\n        \"content\": \"Hello, this is some example message content just to check out how it looks once it is rendered in the broswer. Thanks!\",\n        \"isRead\": false,\n        \"isDeleted\": false\n      }\n    )\n    updateAll();\n    console.log(userData.messages);\n  }\n\n  // Create New Report Function (current inactive)\n  function createNewReport(title, content, timeCreated, dateCreated, reportType, isRead, isDeleted) {\n    userData.reports.push(\n      {\n        \"id\": userData.reports.length + 1,\n        \"title\": title,\n        \"content\": content,\n        \"timeCreated\": timeCreated,\n        \"dateCreated\": dateCreated,\n        \"reportType\": reportType,\n        \"isRead\": isRead,\n        \"isDeleted\": isDeleted\n      }\n    )\n    updateAll();\n    console.log(userData.reports);\n  }\n\n  // Create New Project\n  function createNewProject(projectName) {\n    userData.projects.push(\n      {\n        \"id\": userData.projects.length + 1,\n        \"title\": projectName,\n        \"author\": userData.username,\n        \"timeCreated\": getCurrentTime(),\n        \"dateCreated\": getFullDate(),\n        \"tasks\": {\n          \"toDo\": [],\n          \"inProgress\": [],\n          \"complete\": []\n        },\n        \"isDeleted\": false,\n        \"isComplete\": false\n      },\n    )\n    updateAll();\n    openProjectPage(userData.projects.length);\n    console.log(userData.projects);\n  }\n\n  // Create New Project Task:\n  function createNewTask(projectId, taskType) {\n    // console.log(`This is a '${taskType}' for project ID ${projectId}`);\n    userData.projects.filter(project => {\n      if (project.id === projectId) {\n        if (taskType === 'To Do') {\n          project.tasks.toDo.push({\n            \"id\": project.tasks.toDo.length + 1,\n            \"title\": \"\",\n            \"author\": userData.username,\n            \"content\": \"\",\n            \"tag\": \"\",\n            \"timeCreated\": getCurrentTime(),\n            \"dateCreated\": getFullDate(),\n            \"dateCreatedShort\": getShortDate(),\n            \"comments\": [],\n            \"isDeleted\": false\n          })\n          openTaskPage(project.tasks.toDo.length, 'To Do', projectId);\n        } else if (taskType === 'In Progress') {\n          project.tasks.inProgress.push({\n            \"id\": project.tasks.inProgress.length + 1,\n            \"title\": \"\",\n            \"author\": userData.username,\n            \"content\": \"\",\n            \"tag\": \"\",\n            \"timeCreated\": getCurrentTime(),\n            \"dateCreated\": getFullDate(),\n            \"dateCreatedShort\": getShortDate(),\n            \"comments\": [],\n            \"isDeleted\": false\n          });\n          openTaskPage(project.tasks.inProgress.length, 'In Progress', projectId);\n        } else if (taskType === 'Complete') {\n          project.tasks.complete.push({\n            \"id\": project.tasks.complete.length + 1,\n            \"title\": \"\",\n            \"author\": userData.username,\n            \"content\": \"\",\n            \"tag\": \"\",\n            \"timeCreated\": getCurrentTime(),\n            \"dateCreated\": getFullDate(),\n            \"dateCreatedShort\": getShortDate(),\n            \"comments\": [],\n            \"isDeleted\": false\n          });\n          openTaskPage(project.tasks.complete.length, 'Complete', projectId);\n        }\n        updateAll();\n      }\n    })\n  }\n\n  // Open Project Task Page\n  const [currentTaskId, setCurrentTaskId] = useState(null);\n  const [currentTaskType, setCurrentTaskType] = useState(null);\n\n  function openTaskPage(taskId, taskType, currentProjectId) {\n    // console.log(`This is task ${taskId} of the ${taskType} category for project ${currentProjectId}`);\n    setCurrentPageName('Task Page');\n    setCurrentTaskId(taskId);\n    setCurrentTaskType(taskType);\n    setCurrentProjectId(currentProjectId);\n    // Need to pass these 3 values into Main.js and into TaskPage.js\n  }\n\n  // Back Button from TaskPage to Project Page ---\n  function updateCurrentProject(id) {\n    setCurrentProjectId(id);\n  }\n  function taskBackButtonClicked() {\n    openProjectPage(currentProjectId);\n  }\n  // ---\n\n\n  // UPDATE INPUT VALUES OF TASK PAGE\n  function updateTaskTitleValue(e, target) {\n    // console.log(e.target.value)\n    // console.log(target.title)\n    target.title = e.target.value;\n    updateAll();\n  }\n  function updateTaskTagValue(e, target) {\n    target.tag = e.target.value;\n    updateAll();\n  }\n  function updateTaskContentValue(e, target) {\n    target.content = e.target.value;\n    updateAll();\n  }\n\n  // Toggle Priority Button (Comment)\n  function togglePriorityButton(currentProjectId, currentTaskType, currentTaskId, id) {\n    userData.projects.filter(project => {\n      if (project.id === currentProjectId) {\n        if (currentTaskType === 'To Do') {\n          // console.log(project.tasks.toDo);\n          project.tasks.toDo.filter(task => {\n            if (task.id === currentTaskId) {\n              // console.log(task.comments);\n              task.comments.filter(comment => {\n                if (comment.id === id) {\n                  comment.isPriority = !comment.isPriority;\n                  console.log(comment.isPriority)\n                }\n              })\n            }\n          })\n        } else if (currentTaskType === 'In Progress') {\n          // console.log(project.tasks.inProgress);\n          project.tasks.inProgress.filter(task => {\n            if (task.id === currentTaskId) {\n              // console.log(task.comments);\n              task.comments.filter(comment => {\n                if (comment.id === id) {\n                  comment.isPriority = !comment.isPriority;\n                }\n              })\n            }\n          })\n        } else if (currentTaskType === 'Complete') {\n          // console.log(project.tasks.complete);\n          project.tasks.complete.filter(task => {\n            if (task.id === currentTaskId) {\n              // console.log(task.comments);\n              task.comments.filter(comment => {\n                if (comment.id === id) {\n                  comment.isPriority = !comment.isPriority;\n                }\n              })\n            }\n          })\n        }\n      }\n    })\n    updateAll();\n  }\n\n  // Toggle Like Button (Comment)\n  function toggleLikeButton(currentProjectId, currentTaskType, currentTaskId, id) {\n    userData.projects.filter(project => {\n      if (project.id === currentProjectId) {\n        if (currentTaskType === 'To Do') {\n          // console.log(project.tasks.toDo);\n          project.tasks.toDo.filter(task => {\n            if (task.id === currentTaskId) {\n              // console.log(task.comments);\n              task.comments.filter(comment => {\n                if (comment.id === id) {\n                  comment.isLiked = !comment.isLiked;\n                }\n              })\n            }\n          })\n        } else if (currentTaskType === 'In Progress') {\n          // console.log(project.tasks.inProgress);\n          project.tasks.inProgress.filter(task => {\n            if (task.id === currentTaskId) {\n              // console.log(task.comments);\n              task.comments.filter(comment => {\n                if (comment.id === id) {\n                  comment.isLiked = !comment.isLiked;\n                }\n              })\n            }\n          })\n        } else if (currentTaskType === 'Complete') {\n          // console.log(project.tasks.complete);\n          project.tasks.complete.filter(task => {\n            if (task.id === currentTaskId) {\n              // console.log(task.comments);\n              task.comments.filter(comment => {\n                if (comment.id === id) {\n                  comment.isLiked = !comment.isLiked;\n                }\n              })\n            }\n          })\n        }\n      }\n    })\n    updateAll();\n  }\n\n\n  // Delete Button (Comment)\n  function deleteCommentButton(currentProjectId, currentTaskType, currentTaskId, id) {\n    userData.projects.filter(project => {\n      if (project.id === currentProjectId) {\n        if (currentTaskType === 'To Do') {\n          // console.log(project.tasks.toDo);\n          project.tasks.toDo.filter(task => {\n            if (task.id === currentTaskId) {\n              // console.log(task.comments);\n              task.comments.filter(comment => {\n                if (comment.id === id) {\n                  comment.isDeleted = true;\n                }\n              })\n            }\n          })\n        } else if (currentTaskType === 'In Progress') {\n          // console.log(project.tasks.inProgress);\n          project.tasks.inProgress.filter(task => {\n            if (task.id === currentTaskId) {\n              // console.log(task.comments);\n              task.comments.filter(comment => {\n                if (comment.id === id) {\n                  comment.isDeleted = true;\n                }\n              })\n            }\n          })\n        } else if (currentTaskType === 'Complete') {\n          // console.log(project.tasks.complete);\n          project.tasks.complete.filter(task => {\n            if (task.id === currentTaskId) {\n              // console.log(task.comments);\n              task.comments.filter(comment => {\n                if (comment.id === id) {\n                  comment.isDeleted = true;\n                }\n              })\n            }\n          })\n        }\n      }\n    })\n    updateAll();\n  }\n\n  // Create New Comment\n  const [commentInputValue, setCommentInputValue] = useState('');\n  function updateCommentInputValue(e) {\n    setCommentInputValue(e.target.value);\n    updateAll();\n  }\n  function createNewComment(currentProjectId, currentTaskId, currentTaskType) {\n    if (commentInputValue !== '') {\n      userData.projects.filter(project => {\n        if (project.id === currentProjectId) {\n          if (currentTaskType === 'To Do') {\n            // console.log(project.tasks.toDo);\n            project.tasks.toDo.filter(task => {\n              if (task.id === currentTaskId) {\n                // console.log(task);\n                task.comments.push(\n                  {\n                    \"id\": task.comments.length + 1,\n                    \"author\": userData.username,\n                    \"content\": commentInputValue,\n                    \"dateCreated\": getFullDate(),\n                    \"timeCreated\": getCurrentTime(),\n                    \"isPriority\": false,\n                    \"isLiked\": false,\n                    \"isDeleted\": false\n                  }\n                );\n              }\n            })\n          } else if (currentTaskType === 'In Progress') {\n            // console.log(project.tasks.inProgress);\n            project.tasks.inProgress.filter(task => {\n              if (task.id === currentTaskId) {\n                // console.log(task);\n                task.comments.push(\n                  {\n                    \"id\": task.comments.length + 1,\n                    \"author\": userData.username,\n                    \"content\": commentInputValue,\n                    \"dateCreated\": getFullDate(),\n                    \"timeCreated\": getCurrentTime(),\n                    \"isPriority\": false,\n                    \"isLiked\": false,\n                    \"isDeleted\": false\n                  }\n                );\n              }\n            })\n          } else if (currentTaskType === 'Complete') {\n            // console.log(project.tasks.complete);\n            project.tasks.complete.filter(task => {\n              if (task.id === currentTaskId) {\n                // console.log(task);\n                task.comments.push(\n                  {\n                    \"id\": task.comments.length + 1,\n                    \"author\": userData.username,\n                    \"content\": commentInputValue,\n                    \"dateCreated\": getFullDate(),\n                    \"timeCreated\": getCurrentTime(),\n                    \"isPriority\": false,\n                    \"isLiked\": false,\n                    \"isDeleted\": false\n                  }\n                );\n              }\n            })\n          }\n        }\n      })\n      setCommentInputValue('');\n      updateAll();\n    }\n  }\n\n  function deleteProjectButton(currentProjectId) {\n    // console.log(currentProjectId)\n    userData.projects.filter(project => {\n      if (project.id === currentProjectId) {\n        project.isDeleted = true;\n        // console.log(project);\n        createNewReport(\n          'Project Deleted',\n          `'${project.title}' was deleted by ${userData.username}.`,\n          getCurrentTime(),\n          getFullDate(),\n          'Warning',\n          false,\n          false\n        )\n      }\n    })\n    updateAll();\n    setCurrentPageName('Projects');\n  }\n\n  function deleteTaskButton(currentProjectId, currentTaskId, currentTaskType) {\n    // console.log('Task deleted')\n    userData.projects.filter(project => {\n      if (project.id === currentProjectId) {\n        // console.log(project)\n        if (currentTaskType === 'To Do') {\n          project.tasks.toDo.filter(task => {\n            if (task.id === currentTaskId) {\n              task.isDeleted = true;\n              // console.log(task)\n              createNewReport(\n                'Task Deleted',\n                `A task with the title of '${task.title}' was deleted from project '${project.title}' by ${userData.username}. This task was in the 'To Do' category at the time of deletion.`,\n                getCurrentTime(),\n                getFullDate(),\n                'Warning',\n                false,\n                false\n              )\n            }\n          })\n        } else if (currentTaskType === 'In Progress') {\n          project.tasks.inProgress.filter(task => {\n            if (task.id === currentTaskId) {\n              task.isDeleted = true;\n              // console.log(task)\n              createNewReport(\n                'Task Deleted',\n                `A task with the title of '${task.title}' was deleted from project '${project.title}' by ${userData.username}. This task was in the 'In Progress' category at the time of deletion.`,\n                getCurrentTime(),\n                getFullDate(),\n                'Warning',\n                false,\n                false\n              )\n            }\n          })\n        } else if (currentTaskType === 'Complete') {\n          project.tasks.complete.filter(task => {\n            if (task.id === currentTaskId) {\n              task.isDeleted = true;\n              // console.log(task)\n              createNewReport(\n                'Task Deleted',\n                `A task with the title of '${task.title}' was deleted from project '${project.title}' by ${userData.username}. This task was in the 'Complete' category at the time of deletion.`,\n                getCurrentTime(),\n                getFullDate(),\n                'Warning',\n                false,\n                false\n              )\n            }\n          })\n        }\n      }\n    })\n    updateAll();\n    setCurrentPageName('Project Page');\n  }\n\n  // Change Task Status\n  function changeTaskStatus(changeToStatus, currentProjectId, currentTaskType, currentTaskId) {\n    // console.log(changeToStatus);\n    userData.projects.filter(project => {\n      if (project.id === currentProjectId) {\n        // console.log(project);\n        if (currentTaskType === 'To Do') {\n          project.tasks.toDo.filter(task => {\n            if (task.id === currentTaskId) {\n              const newTask = { ...task };\n              if (changeToStatus === 'To Do') {\n                newTask.id = project.tasks.toDo.length + 1;\n                project.tasks.toDo.push(newTask);\n                openTaskPage(project.tasks.toDo.length, 'To Do', newTask.id);\n              } else if (changeToStatus === 'In Progress') {\n                newTask.id = project.tasks.inProgress.length + 1;\n                project.tasks.inProgress.push(newTask);\n                openTaskPage(project.tasks.inProgress.length, 'In Progress', newTask.id);\n              } else if (changeToStatus === 'Complete') {\n                newTask.id = project.tasks.complete.length + 1;\n                project.tasks.complete.push(newTask);\n                openTaskPage(project.tasks.complete.length, 'Complete', newTask.id);\n              }\n              task.isDeleted = true;\n              // console.log(project);\n            }\n          });\n        } else if (currentTaskType === 'In Progress') {\n          project.tasks.inProgress.filter(task => {\n            if (task.id === currentTaskId) {\n              const newTask = { ...task };\n              if (changeToStatus === 'To Do') {\n                newTask.id = project.tasks.toDo.length + 1;\n                project.tasks.toDo.push(newTask);\n                openTaskPage(project.tasks.toDo.length, 'To Do', newTask.id);\n              } else if (changeToStatus === 'In Progress') {\n                newTask.id = project.tasks.inProgress.length + 1;\n                project.tasks.inProgress.push(newTask);\n                openTaskPage(project.tasks.inProgress.length, 'In Progress', newTask.id);\n              } else if (changeToStatus === 'Complete') {\n                newTask.id = project.tasks.complete.length + 1;\n                project.tasks.complete.push(newTask);\n                openTaskPage(project.tasks.complete.length, 'Complete', newTask.id);\n              }\n              task.isDeleted = true;\n              // console.log(task);\n            }\n          });\n        } else if (currentTaskType === 'Complete') {\n          project.tasks.complete.filter(task => {\n            if (task.id === currentTaskId) {\n              const newTask = { ...task };\n              if (changeToStatus === 'To Do') {\n                newTask.id = project.tasks.toDo.length + 1;\n                project.tasks.toDo.push(newTask);\n                openTaskPage(project.tasks.toDo.length, 'To Do', newTask.id);\n              } else if (changeToStatus === 'In Progress') {\n                newTask.id = project.tasks.inProgress.length + 1;\n                project.tasks.inProgress.push(newTask);\n                openTaskPage(project.tasks.inProgress.length, 'In Progress', newTask.id);\n              } else if (changeToStatus === 'Complete') {\n                newTask.id = project.tasks.complete.length + 1;\n                project.tasks.complete.push(newTask);\n                openTaskPage(project.tasks.complete.length, 'Complete', newTask.id);\n              }\n              task.isDeleted = true;\n              // console.log(task);\n            }\n          });\n        }\n      }\n    })\n    setCurrentProjectId(currentProjectId);\n    updateAll();\n  }\n\n  function deleteMessage(id) {\n    // console.log(`Message ${id} is deleted`);\n    userData.messages.filter(message => {\n      if (message.id === id) {\n        message.isDeleted = true;\n      }\n    });\n    updateAll();\n  }\n\n  function deleteReport(id) {\n    // console.log(`Report ${id} is deleted`);\n    userData.reports.filter(report => {\n      if (report.id === id) {\n        report.isDeleted = true;\n      }\n    });\n    updateAll();\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className={asideIsOpen ? 'aside-container' : 'aside-container aside-container-disabled'}>\n          <IconButton\n            iconClass={`aside-container__button ${asideIsOpen ? 'fa-solid fa-angles-left' : 'fa-solid fa-angles-right'}`}\n            handleClick={() => toggleAside()}\n          />\n          <Aside\n            asideIsOpen={asideIsOpen}\n            handleClick={(title) => asideButtonClicked(title)}\n            updateCurrentPageName={() => updateCurrentPageName('Projects')}\n            userData={userData}\n            createNewProject={(projectName) => createNewProject(projectName)}\n            openProjectPage={(id) => openProjectPage(id)}\n          />\n        </div>\n        <div className=\"main-container\">\n          <Main\n            currentPageName={currentPageName}\n            updateCurrentPageName={(page) => updateCurrentPageName(page)}\n            getYear={() => getYear()}\n            userData={userData}\n            updateMessageIsRead={(id) => updateMessageIsRead(id)}\n            updateReportIsRead={(id) => updateReportIsRead(id)}\n            createNewProject={(projectName) => createNewProject(projectName)}\n            openProjectPage={(id) => openProjectPage(id)}\n            currentProjectId={currentProjectId}\n            openProjects={() => openProjects()}\n            updateInputValue={(e, target) => updateInputValue(e, target)}\n            asideIsOpen={asideIsOpen}\n            createNewTask={(projectId, taskType) => createNewTask(projectId, taskType)}\n            openTaskPage={(taskId, taskType, currentProjectId) => openTaskPage(taskId, taskType, currentProjectId)}\n            currentTaskId={currentTaskId}\n            currentTaskType={currentTaskType}\n            updateCurrentProject={(id) => updateCurrentProject(id)}\n            taskBackButtonClicked={() => taskBackButtonClicked()}\n            updateTaskTitleValue={(e, target) => updateTaskTitleValue(e, target)}\n            updateTaskTagValue={(e, target) => updateTaskTagValue(e, target)}\n            updateTaskContentValue={(e, target) => updateTaskContentValue(e, target)}\n            togglePriorityButton={(currentProjectId, currentTaskType, currentTaskId, id) => togglePriorityButton(currentProjectId, currentTaskType, currentTaskId, id)}\n            toggleLikeButton={(currentProjectId, currentTaskType, currentTaskId, id) => toggleLikeButton(currentProjectId, currentTaskType, currentTaskId, id)}\n            deleteCommentButton={(currentProjectId, currentTaskType, currentTaskId, id) => deleteCommentButton(currentProjectId, currentTaskType, currentTaskId, id)}\n            createNewComment={(currentProjectId, currentTaskId, currentTaskType) => createNewComment(currentProjectId, currentTaskId, currentTaskType)}\n            updateCommentInputValue={(e) => updateCommentInputValue(e)}\n            commentInputValue={commentInputValue}\n            deleteProjectButton={(currentProjectId) => deleteProjectButton(currentProjectId)}\n            deleteTaskButton={(currentProjectId, currentTaskId, currentTaskType) => deleteTaskButton(currentProjectId, currentTaskId, currentTaskType)}\n            changeTaskStatus={(changeToStatus, currentProjectId, currentTaskType, currentTaskId) => changeTaskStatus(changeToStatus, currentProjectId, currentTaskType, currentTaskId)}\n            openReports={() => openReports()}\n            openMessages={() => openMessages()}\n            deleteMessage={(id) => deleteMessage(id)}\n            deleteReport={(id) => deleteReport(id)}\n          />\n        </div>\n      </div>\n    </div >\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}