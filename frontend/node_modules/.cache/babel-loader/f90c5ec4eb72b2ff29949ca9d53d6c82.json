{"ast":null,"code":"import _toConsumableArray from\"D:/Projects/Issue_Tracker/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"D:/Projects/Issue_Tracker/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';import EmptyNotification from'../../../../reusable/notifications/EmptyNotification/EmptyNotification';import TaskComment from'./TaskComment';import'./TaskPage.css';import ButtonStrong from'../../../../reusable/buttons/ButtonStrong/ButtonStrong';import{toHaveAccessibleDescription}from'@testing-library/jest-dom/dist/matchers';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TaskPage(_ref){var userData=_ref.userData,currentProjectId=_ref.currentProjectId,currentTaskId=_ref.currentTaskId,currentTaskType=_ref.currentTaskType,updateCurrentProject=_ref.updateCurrentProject,updateTaskTitleValue=_ref.updateTaskTitleValue,updateTaskTagValue=_ref.updateTaskTagValue,updateTaskContentValue=_ref.updateTaskContentValue,togglePriorityButton=_ref.togglePriorityButton,toggleLikeButton=_ref.toggleLikeButton,deleteCommentButton=_ref.deleteCommentButton,createNewComment=_ref.createNewComment,updateCommentInputValue=_ref.updateCommentInputValue,commentInputValue=_ref.commentInputValue,deleteTaskButton=_ref.deleteTaskButton,changeTaskStatus=_ref.changeTaskStatus;console.log(userData);console.log(\"This is Task \".concat(currentTaskId,\" of the \").concat(currentTaskType,\" category of project number \").concat(currentProjectId));var typeStyling;if(currentTaskType==='To Do'){typeStyling='ticket-container--primary';}else if(currentTaskType==='In Progress'){typeStyling='ticket-container--yellow';}else if(currentTaskType==='Complete'){typeStyling='ticket-container--green';}var _useState=useState('Title'),_useState2=_slicedToArray(_useState,2),currentProject=_useState2[0],setCurrentProject=_useState2[1];var _useState3=useState({\"title\":\"Task\",\"comments\":[]}),_useState4=_slicedToArray(_useState3,2),currentTask=_useState4[0],setCurrentTask=_useState4[1];useEffect(function(){userData.projects.filter(function(project){if(project.id===currentProjectId){setCurrentProject(project);updateCurrentProject(currentProjectId);console.log(project);if(currentTaskType==='To Do'){project.tasks.toDo.filter(function(task){if(task.id===currentTaskId){console.log(task);setCurrentTask(task);}});}else if(currentTaskType==='In Progress'){project.tasks.inProgress.filter(function(task){if(task.id===currentTaskId){console.log(task);setCurrentTask(task);}});}else if(currentTaskType==='Complete'){project.tasks.complete.filter(function(task){if(task.id===currentTaskId){console.log(task);setCurrentTask(task);}});}}});},[]);function handleTaskTitleChange(e){updateTaskTitleValue(e,currentTask);}function handleTaskTagChange(e){updateTaskTagValue(e,currentTask);}function handleTaskContentChange(e){updateTaskContentValue(e,currentTask);}// Toggle Priority Button (Comment)\nfunction _togglePriorityButtonClicked(id){togglePriorityButton(currentProjectId,currentTaskType,currentTaskId,id);}// Toggle Like Button (Comment)\nfunction _toggleLikeButtonClicked(id){toggleLikeButton(currentProjectId,currentTaskType,currentTaskId,id);}// Delete Button (Comment)\nfunction _deleteCommentButtonClicked(id){deleteCommentButton(currentProjectId,currentTaskType,currentTaskId,id);}// Create New Comment Button Clicked\nfunction createNewCommentClicked(e){e.preventDefault();createNewComment(currentProjectId,currentTaskId,currentTaskType);}// Delete Task\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),deleteButtonIsOpen=_useState6[0],setDeleteButtonIsOpen=_useState6[1];function deleteTaskButtonClicked(currentProjectId,currentTaskId,currentTaskType){setDeleteButtonIsOpen(true);setTimeout(function(){setDeleteButtonIsOpen(false);},3000);}function closeDeleteOptions(){setDeleteButtonIsOpen(false);}function deleteTaskCheckButton(currentProjectId,currentTaskId,currentTaskType){setDeleteButtonIsOpen(false);deleteTaskButton(currentProjectId,currentTaskId,currentTaskType);}// Show Status Buttons\nvar _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),statusButtonsShown=_useState8[0],setStatusButtonsShown=_useState8[1];function openStatusButtonsClicked(){setStatusButtonsShown(true);}function changeStatusButtonClicked(changeToStatus){// console.log(changeToStatus);\nchangeTaskStatus(changeToStatus,currentProjectId,currentTaskType,currentTaskId);setStatusButtonsShown(false);}return/*#__PURE__*/_jsxs(\"div\",{className:\"ticket-container \".concat(typeStyling),children:[/*#__PURE__*/_jsx(\"div\",{className:\"ticket__head\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"ticket__head-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"ticket-info__info\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"ticket-info__icon fa-solid fa-ticket\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"ticket-info__subtitle\",children:[\"Opened a task for \",/*#__PURE__*/_jsx(\"strong\",{className:\"ticket-info__text--strong\",children:currentProject.title}),\".\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"main__head-info--top\",children:[/*#__PURE__*/_jsx(\"input\",{onChange:function onChange(e){return handleTaskTitleChange(e);},className:\"ticket-info__title\",value:currentTask.title,placeholder:\"Add Ticket Name...\",type:\"text\"}),!deleteButtonIsOpen&&/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return deleteTaskButtonClicked(currentProjectId,currentTaskId,currentTaskType);},className:\"button--delete btn-transparent\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fa-solid fa-trash-can\"})}),deleteButtonIsOpen&&/*#__PURE__*/_jsxs(\"div\",{className:\"delete__options-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"options-container__bar--outer\",children:/*#__PURE__*/_jsx(\"div\",{className:\"options-container__bar--inner\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return deleteTaskCheckButton(currentProjectId,currentTaskId,currentTaskType);},className:\"options-container__button btn-transparent\",children:/*#__PURE__*/_jsx(\"i\",{className:\"options-container__button--delete fa-solid fa-check\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return closeDeleteOptions();},className:\"options-container__button btn-transparent\",children:/*#__PURE__*/_jsx(\"i\",{className:\"options-container__button--close fa-solid fa-xmark\"})})]})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"ticket-info__date\",children:[\"Created by \",/*#__PURE__*/_jsx(\"strong\",{className:\"ticket-info__text--strong\",children:currentTask.author}),\" on \",currentTask.dateCreated,\" at \",currentTask.timeCreated,\".\"]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"ticket-info__tag-and-status\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"ticket-info__tag-container\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"ticket-info__tag-icon fa-solid fa-hashtag\"}),/*#__PURE__*/_jsx(\"input\",{onChange:function onChange(e){return handleTaskTagChange(e);},className:\"ticket-info__tag-input\",value:currentTask.tag,placeholder:\"Add Tag...\",type:\"text\"})]}),statusButtonsShown&&/*#__PURE__*/_jsxs(\"div\",{className:\"ticket-info__button-container\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"ticket-info__status-text\",children:\"Status:\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return changeStatusButtonClicked('To Do');},className:\"\".concat(currentTaskType==='To Do'&&'to-do-button--selected',\" ticket-info__status-button hover--blue btn-transparent\"),children:/*#__PURE__*/_jsx(\"i\",{className:\"fa-solid fa-layer-group\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return changeStatusButtonClicked('In Progress');},className:\"\".concat(currentTaskType==='In Progress'&&'in-progress-button--selected',\" ticket-info__status-button hover--yellow btn-transparent\"),children:/*#__PURE__*/_jsx(\"i\",{className:\"fa-solid fa-trowel-bricks\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return changeStatusButtonClicked('Complete');},className:\"\".concat(currentTaskType==='Complete'&&'complete-button--selected',\" ticket-info__status-button hover--green btn-transparent\"),children:/*#__PURE__*/_jsx(\"i\",{className:\"fa-solid fa-fire\"})})]}),!statusButtonsShown&&/*#__PURE__*/_jsxs(\"div\",{className:\"ticket-info__button-container\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"ticket-info__status-text\",children:\"Status:\"}),currentTaskType==='To Do'&&/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return openStatusButtonsClicked();},className:\"ticket-info__status-button--small btn-transparent\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fa-solid fa-layer-group\"})}),currentTaskType==='In Progress'&&/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return openStatusButtonsClicked();},className:\"ticket-info__status-button--small btn-transparent\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fa-solid fa-trowel-bricks\"})}),currentTaskType==='Complete'&&/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return openStatusButtonsClicked();},className:\"ticket-info__status-button--small btn-transparent\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fa-solid fa-fire\"})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"ticket__description-container\",children:/*#__PURE__*/_jsx(\"textarea\",{onChange:function onChange(e){return handleTaskContentChange(e);},className:\"ticket__description\",value:currentTask.content,placeholder:\"Add Description...\",type:\"text\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"comments-container\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"comments-container__header\",children:[\"Comments (\",_toConsumableArray(currentTask.comments.filter(function(task){return task.isDeleted===false;})).length,\")\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"comments-container__comments\",children:[currentTask.comments.length!==0&&currentTask.comments.map(function(comment){if(comment.isDeleted===false){return/*#__PURE__*/_jsx(TaskComment,{id:comment.id,author:comment.author,content:comment.content,dateCreated:comment.dateCreated,timeCreated:comment.timeCreated,isPriority:comment.isPriority,isLiked:comment.isLiked,isDeleted:comment.isDeleted,togglePriorityButtonClicked:function togglePriorityButtonClicked(id){return _togglePriorityButtonClicked(id);},toggleLikeButtonClicked:function toggleLikeButtonClicked(id){return _toggleLikeButtonClicked(id);},deleteCommentButtonClicked:function deleteCommentButtonClicked(id){return _deleteCommentButtonClicked(id);}},comment.id);}}),/*#__PURE__*/_jsxs(\"form\",{className:\"task-page__add-task-form\",children:[/*#__PURE__*/_jsx(\"input\",{onChange:function onChange(e){return updateCommentInputValue(e);},className:\"add-task-form__input\",value:commentInputValue,placeholder:\"Add a Comment...\"}),/*#__PURE__*/_jsx(ButtonStrong,{iconClass:\"fa-solid fa-plus\",text:\"Add Comment\",handleClick:function handleClick(e){return createNewCommentClicked(e);}})]}),_toConsumableArray(currentTask.comments.filter(function(task){return task.isDeleted===false;})).length===0&&/*#__PURE__*/_jsx(EmptyNotification,{icon:\"fa-solid fa-envelope-open\",text:\"Looks like you have no comments!\"})]})]})]});}export default TaskPage;","map":{"version":3,"names":["useState","useEffect","EmptyNotification","TaskComment","ButtonStrong","toHaveAccessibleDescription","TaskPage","userData","currentProjectId","currentTaskId","currentTaskType","updateCurrentProject","updateTaskTitleValue","updateTaskTagValue","updateTaskContentValue","togglePriorityButton","toggleLikeButton","deleteCommentButton","createNewComment","updateCommentInputValue","commentInputValue","deleteTaskButton","changeTaskStatus","console","log","typeStyling","currentProject","setCurrentProject","currentTask","setCurrentTask","projects","filter","project","id","tasks","toDo","task","inProgress","complete","handleTaskTitleChange","e","handleTaskTagChange","handleTaskContentChange","togglePriorityButtonClicked","toggleLikeButtonClicked","deleteCommentButtonClicked","createNewCommentClicked","preventDefault","deleteButtonIsOpen","setDeleteButtonIsOpen","deleteTaskButtonClicked","setTimeout","closeDeleteOptions","deleteTaskCheckButton","statusButtonsShown","setStatusButtonsShown","openStatusButtonsClicked","changeStatusButtonClicked","changeToStatus","title","author","dateCreated","timeCreated","tag","content","comments","isDeleted","length","map","comment","isPriority","isLiked"],"sources":["D:/Projects/Issue_Tracker/frontend/src/components/main/pages/Task/TaskPage.js"],"sourcesContent":["\nimport { useState, useEffect } from 'react';\nimport EmptyNotification from '../../../../reusable/notifications/EmptyNotification/EmptyNotification';\nimport TaskComment from './TaskComment';\nimport './TaskPage.css';\nimport ButtonStrong from '../../../../reusable/buttons/ButtonStrong/ButtonStrong';\nimport { toHaveAccessibleDescription } from '@testing-library/jest-dom/dist/matchers';\n\nfunction TaskPage({ userData, currentProjectId, currentTaskId, currentTaskType, updateCurrentProject, updateTaskTitleValue, updateTaskTagValue, updateTaskContentValue, togglePriorityButton, toggleLikeButton, deleteCommentButton, createNewComment, updateCommentInputValue, commentInputValue, deleteTaskButton, changeTaskStatus }) {\n    console.log(userData)\n    console.log(`This is Task ${currentTaskId} of the ${currentTaskType} category of project number ${currentProjectId}`);\n\n    let typeStyling;\n    if (currentTaskType === 'To Do') {\n        typeStyling = 'ticket-container--primary';\n    } else if (currentTaskType === 'In Progress') {\n        typeStyling = 'ticket-container--yellow';\n    } else if (currentTaskType === 'Complete') {\n        typeStyling = 'ticket-container--green';\n    }\n\n    const [currentProject, setCurrentProject] = useState('Title');\n    const [currentTask, setCurrentTask] = useState({ \"title\": \"Task\", \"comments\": [] });\n    useEffect(() => {\n        userData.projects.filter(project => {\n            if (project.id === currentProjectId) {\n                setCurrentProject(project);\n                updateCurrentProject(currentProjectId);\n                console.log(project);\n                if (currentTaskType === 'To Do') {\n                    project.tasks.toDo.filter(task => {\n                        if (task.id === currentTaskId) {\n                            console.log(task);\n                            setCurrentTask(task);\n                        }\n                    })\n                } else if (currentTaskType === 'In Progress') {\n                    project.tasks.inProgress.filter(task => {\n                        if (task.id === currentTaskId) {\n                            console.log(task);\n                            setCurrentTask(task);\n                        }\n                    })\n                } else if (currentTaskType === 'Complete') {\n                    project.tasks.complete.filter(task => {\n                        if (task.id === currentTaskId) {\n                            console.log(task);\n                            setCurrentTask(task);\n                        }\n                    })\n                }\n            }\n        });\n    }, []);\n\n    function handleTaskTitleChange(e) {\n        updateTaskTitleValue(e, currentTask);\n    }\n\n    function handleTaskTagChange(e) {\n        updateTaskTagValue(e, currentTask);\n    }\n\n    function handleTaskContentChange(e) {\n        updateTaskContentValue(e, currentTask);\n    }\n\n    // Toggle Priority Button (Comment)\n    function togglePriorityButtonClicked(id) {\n        togglePriorityButton(currentProjectId, currentTaskType, currentTaskId, id);\n    }\n\n    // Toggle Like Button (Comment)\n    function toggleLikeButtonClicked(id) {\n        toggleLikeButton(currentProjectId, currentTaskType, currentTaskId, id);\n    }\n\n    // Delete Button (Comment)\n    function deleteCommentButtonClicked(id) {\n        deleteCommentButton(currentProjectId, currentTaskType, currentTaskId, id);\n    }\n\n    // Create New Comment Button Clicked\n    function createNewCommentClicked(e) {\n        e.preventDefault();\n        createNewComment(currentProjectId, currentTaskId, currentTaskType)\n    }\n\n    // Delete Task\n    const [deleteButtonIsOpen, setDeleteButtonIsOpen] = useState(false);\n    function deleteTaskButtonClicked(currentProjectId, currentTaskId, currentTaskType) {\n        setDeleteButtonIsOpen(true);\n        setTimeout(() => {\n            setDeleteButtonIsOpen(false);\n        }, 3000);\n    }\n\n    function closeDeleteOptions() {\n        setDeleteButtonIsOpen(false);\n    }\n\n    function deleteTaskCheckButton(currentProjectId, currentTaskId, currentTaskType) {\n        setDeleteButtonIsOpen(false);\n        deleteTaskButton(currentProjectId, currentTaskId, currentTaskType);\n    }\n\n    // Show Status Buttons\n    const [statusButtonsShown, setStatusButtonsShown] = useState(false);\n    function openStatusButtonsClicked() {\n        setStatusButtonsShown(true);\n    }\n    function changeStatusButtonClicked(changeToStatus) {\n        // console.log(changeToStatus);\n        changeTaskStatus(changeToStatus, currentProjectId, currentTaskType, currentTaskId);\n        setStatusButtonsShown(false);\n    }\n\n    return (\n        <div className={`ticket-container ${typeStyling}`}>\n            {/* Ticket Title Information */}\n            < div className=\"ticket__head\" >\n                <div className=\"ticket__head-info\">\n                    {/* Header */}\n                    <div className=\"ticket-info__info\">\n                        <i className=\"ticket-info__icon fa-solid fa-ticket\"></i>\n                        <p className=\"ticket-info__subtitle\">Opened a task for <strong className=\"ticket-info__text--strong\">{currentProject.title}</strong>.</p>\n                    </div>\n                    <div className=\"main__head-info--top\">\n                        <input onChange={(e) => handleTaskTitleChange(e)} className=\"ticket-info__title\" value={currentTask.title} placeholder=\"Add Ticket Name...\" type=\"text\" />\n                        {!deleteButtonIsOpen && <button onClick={() => deleteTaskButtonClicked(currentProjectId, currentTaskId, currentTaskType)} className=\"button--delete btn-transparent\">\n                            <i className=\"fa-solid fa-trash-can\"></i>\n                        </button>}\n                        {deleteButtonIsOpen && <div className=\"delete__options-container\">\n                            <div className=\"options-container__bar--outer\">\n                                <div className=\"options-container__bar--inner\"></div>\n                            </div>\n                            <button onClick={() => deleteTaskCheckButton(currentProjectId, currentTaskId, currentTaskType)} className=\"options-container__button btn-transparent\">\n                                <i className=\"options-container__button--delete fa-solid fa-check\"></i>\n                            </button>\n                            <button onClick={() => closeDeleteOptions()} className=\"options-container__button btn-transparent\">\n                                <i className=\"options-container__button--close fa-solid fa-xmark\"></i>\n                            </button>\n                        </div>}\n                    </div>\n                    {/* <input onChange={(e) => handleTaskTitleChange(e)} className=\"ticket-info__title\" value={currentTask.title} placeholder=\"Add Ticket Name...\" type=\"text\" /> */}\n                    {/* Author / Date / Time */}\n                    <p className=\"ticket-info__date\">Created by <strong className=\"ticket-info__text--strong\">{currentTask.author}</strong> on {currentTask.dateCreated} at {currentTask.timeCreated}.</p>\n                </div>\n            </div >\n            {/* Tag */}\n            <div className=\"ticket-info__tag-and-status\">\n                < div className=\"ticket-info__tag-container\" >\n                    <i className=\"ticket-info__tag-icon fa-solid fa-hashtag\"></i>\n                    <input onChange={(e) => handleTaskTagChange(e)} className=\"ticket-info__tag-input\" value={currentTask.tag} placeholder=\"Add Tag...\" type=\"text\" />\n                </div >\n                {statusButtonsShown && <div className=\"ticket-info__button-container\">\n                    <p className=\"ticket-info__status-text\">Status:</p>\n                    <button onClick={() => changeStatusButtonClicked('To Do')} className={`${currentTaskType === 'To Do' && 'to-do-button--selected'} ticket-info__status-button hover--blue btn-transparent`}>\n                        <i className=\"fa-solid fa-layer-group\"></i>\n                        {/* <p>To Do</p> */}\n                    </button>\n                    <button onClick={() => changeStatusButtonClicked('In Progress')} className={`${currentTaskType === 'In Progress' && 'in-progress-button--selected'} ticket-info__status-button hover--yellow btn-transparent`}>\n                        <i className=\"fa-solid fa-trowel-bricks\"></i>\n                        {/* <p>In Progress</p> */}\n                    </button>\n                    <button onClick={() => changeStatusButtonClicked('Complete')} className={`${currentTaskType === 'Complete' && 'complete-button--selected'} ticket-info__status-button hover--green btn-transparent`}>\n                        <i className=\"fa-solid fa-fire\"></i>\n                        {/* <p>Complete</p> */}\n                    </button>\n                </div>}\n                {!statusButtonsShown && <div className=\"ticket-info__button-container\">\n                    <p className=\"ticket-info__status-text\">Status:</p>\n                    {currentTaskType === 'To Do' && <button onClick={() => openStatusButtonsClicked()} className=\"ticket-info__status-button--small btn-transparent\">\n                        <i className=\"fa-solid fa-layer-group\"></i>\n                    </button>}\n                    {currentTaskType === 'In Progress' && <button onClick={() => openStatusButtonsClicked()} className=\"ticket-info__status-button--small btn-transparent\">\n                        <i className=\"fa-solid fa-trowel-bricks\"></i>\n                    </button>}\n                    {currentTaskType === 'Complete' && <button onClick={() => openStatusButtonsClicked()} className=\"ticket-info__status-button--small btn-transparent\">\n                        <i className=\"fa-solid fa-fire\"></i>\n                    </button>}\n                </div>}\n            </div>\n            {/* Description */}\n            <div className=\"ticket__description-container\">\n                <textarea onChange={(e) => handleTaskContentChange(e)} className=\"ticket__description\" value={currentTask.content} placeholder=\"Add Description...\" type=\"text\" />\n            </div>\n            <div className=\"comments-container\">\n                {/* <p className=\"comments-container__header\">Comments ({currentTask.comments ? currentTask.comments.length : 0})</p> */}\n                <p className=\"comments-container__header\">Comments ({\n                    [...currentTask.comments.filter(task => task.isDeleted === false)].length\n                })</p>\n\n                <div className=\"comments-container__comments\">\n                    {/* Show Comments: */}\n                    {currentTask.comments.length !== 0 && currentTask.comments.map(comment => {\n                        if (comment.isDeleted === false) {\n                            return <TaskComment\n                                key={comment.id}\n                                id={comment.id}\n                                author={comment.author}\n                                content={comment.content}\n                                dateCreated={comment.dateCreated}\n                                timeCreated={comment.timeCreated}\n                                isPriority={comment.isPriority}\n                                isLiked={comment.isLiked}\n                                isDeleted={comment.isDeleted}\n                                togglePriorityButtonClicked={(id) => togglePriorityButtonClicked(id)}\n                                toggleLikeButtonClicked={(id) => toggleLikeButtonClicked(id)}\n                                deleteCommentButtonClicked={(id) => deleteCommentButtonClicked(id)}\n                            />\n                        }\n                    })}\n                    {/* Add New Task Form */}\n                    <form className=\"task-page__add-task-form\">\n                        <input onChange={(e) => updateCommentInputValue(e)} className=\"add-task-form__input\" value={commentInputValue} placeholder=\"Add a Comment...\"></input>\n                        <ButtonStrong\n                            iconClass='fa-solid fa-plus'\n                            text='Add Comment'\n                            handleClick={(e) => createNewCommentClicked(e)}\n                        />\n                    </form>\n                    {/* No Comments: */}\n                    {[...currentTask.comments.filter(task => task.isDeleted === false)].length === 0 && <EmptyNotification\n                        icon='fa-solid fa-envelope-open'\n                        text='Looks like you have no comments!'\n                    />}\n\n                    {/* {currentTask.comments.length === 0 && <EmptyNotification\n                        icon='fa-solid fa-envelope-open'\n                        text='Looks like you have no comments!'\n                    />} */}\n                </div>\n            </div>\n        </div >\n    )\n}\n\nexport default TaskPage;"],"mappings":"wPACA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,kBAAP,KAA8B,wEAA9B,CACA,MAAOC,YAAP,KAAwB,eAAxB,CACA,MAAO,gBAAP,CACA,MAAOC,aAAP,KAAyB,wDAAzB,CACA,OAASC,2BAAT,KAA4C,yCAA5C,C,wFAEA,QAASC,SAAT,MAAyU,IAArTC,SAAqT,MAArTA,QAAqT,CAA3SC,gBAA2S,MAA3SA,gBAA2S,CAAzRC,aAAyR,MAAzRA,aAAyR,CAA1QC,eAA0Q,MAA1QA,eAA0Q,CAAzPC,oBAAyP,MAAzPA,oBAAyP,CAAnOC,oBAAmO,MAAnOA,oBAAmO,CAA7MC,kBAA6M,MAA7MA,kBAA6M,CAAzLC,sBAAyL,MAAzLA,sBAAyL,CAAjKC,oBAAiK,MAAjKA,oBAAiK,CAA3IC,gBAA2I,MAA3IA,gBAA2I,CAAzHC,mBAAyH,MAAzHA,mBAAyH,CAApGC,gBAAoG,MAApGA,gBAAoG,CAAlFC,uBAAkF,MAAlFA,uBAAkF,CAAzDC,iBAAyD,MAAzDA,iBAAyD,CAAtCC,gBAAsC,MAAtCA,gBAAsC,CAApBC,gBAAoB,MAApBA,gBAAoB,CACrUC,OAAO,CAACC,GAAR,CAAYjB,QAAZ,EACAgB,OAAO,CAACC,GAAR,wBAA4Bf,aAA5B,oBAAoDC,eAApD,wCAAkGF,gBAAlG,GAEA,GAAIiB,YAAJ,CACA,GAAIf,eAAe,GAAK,OAAxB,CAAiC,CAC7Be,WAAW,CAAG,2BAAd,CACH,CAFD,IAEO,IAAIf,eAAe,GAAK,aAAxB,CAAuC,CAC1Ce,WAAW,CAAG,0BAAd,CACH,CAFM,IAEA,IAAIf,eAAe,GAAK,UAAxB,CAAoC,CACvCe,WAAW,CAAG,yBAAd,CACH,CAED,cAA4CzB,QAAQ,CAAC,OAAD,CAApD,wCAAO0B,cAAP,eAAuBC,iBAAvB,eACA,eAAsC3B,QAAQ,CAAC,CAAE,QAAS,MAAX,CAAmB,WAAY,EAA/B,CAAD,CAA9C,yCAAO4B,WAAP,eAAoBC,cAApB,eACA5B,SAAS,CAAC,UAAM,CACZM,QAAQ,CAACuB,QAAT,CAAkBC,MAAlB,CAAyB,SAAAC,OAAO,CAAI,CAChC,GAAIA,OAAO,CAACC,EAAR,GAAezB,gBAAnB,CAAqC,CACjCmB,iBAAiB,CAACK,OAAD,CAAjB,CACArB,oBAAoB,CAACH,gBAAD,CAApB,CACAe,OAAO,CAACC,GAAR,CAAYQ,OAAZ,EACA,GAAItB,eAAe,GAAK,OAAxB,CAAiC,CAC7BsB,OAAO,CAACE,KAAR,CAAcC,IAAd,CAAmBJ,MAAnB,CAA0B,SAAAK,IAAI,CAAI,CAC9B,GAAIA,IAAI,CAACH,EAAL,GAAYxB,aAAhB,CAA+B,CAC3Bc,OAAO,CAACC,GAAR,CAAYY,IAAZ,EACAP,cAAc,CAACO,IAAD,CAAd,CACH,CACJ,CALD,EAMH,CAPD,IAOO,IAAI1B,eAAe,GAAK,aAAxB,CAAuC,CAC1CsB,OAAO,CAACE,KAAR,CAAcG,UAAd,CAAyBN,MAAzB,CAAgC,SAAAK,IAAI,CAAI,CACpC,GAAIA,IAAI,CAACH,EAAL,GAAYxB,aAAhB,CAA+B,CAC3Bc,OAAO,CAACC,GAAR,CAAYY,IAAZ,EACAP,cAAc,CAACO,IAAD,CAAd,CACH,CACJ,CALD,EAMH,CAPM,IAOA,IAAI1B,eAAe,GAAK,UAAxB,CAAoC,CACvCsB,OAAO,CAACE,KAAR,CAAcI,QAAd,CAAuBP,MAAvB,CAA8B,SAAAK,IAAI,CAAI,CAClC,GAAIA,IAAI,CAACH,EAAL,GAAYxB,aAAhB,CAA+B,CAC3Bc,OAAO,CAACC,GAAR,CAAYY,IAAZ,EACAP,cAAc,CAACO,IAAD,CAAd,CACH,CACJ,CALD,EAMH,CACJ,CACJ,CA5BD,EA6BH,CA9BQ,CA8BN,EA9BM,CAAT,CAgCA,QAASG,sBAAT,CAA+BC,CAA/B,CAAkC,CAC9B5B,oBAAoB,CAAC4B,CAAD,CAAIZ,WAAJ,CAApB,CACH,CAED,QAASa,oBAAT,CAA6BD,CAA7B,CAAgC,CAC5B3B,kBAAkB,CAAC2B,CAAD,CAAIZ,WAAJ,CAAlB,CACH,CAED,QAASc,wBAAT,CAAiCF,CAAjC,CAAoC,CAChC1B,sBAAsB,CAAC0B,CAAD,CAAIZ,WAAJ,CAAtB,CACH,CAED;AACA,QAASe,6BAAT,CAAqCV,EAArC,CAAyC,CACrClB,oBAAoB,CAACP,gBAAD,CAAmBE,eAAnB,CAAoCD,aAApC,CAAmDwB,EAAnD,CAApB,CACH,CAED;AACA,QAASW,yBAAT,CAAiCX,EAAjC,CAAqC,CACjCjB,gBAAgB,CAACR,gBAAD,CAAmBE,eAAnB,CAAoCD,aAApC,CAAmDwB,EAAnD,CAAhB,CACH,CAED;AACA,QAASY,4BAAT,CAAoCZ,EAApC,CAAwC,CACpChB,mBAAmB,CAACT,gBAAD,CAAmBE,eAAnB,CAAoCD,aAApC,CAAmDwB,EAAnD,CAAnB,CACH,CAED;AACA,QAASa,wBAAT,CAAiCN,CAAjC,CAAoC,CAChCA,CAAC,CAACO,cAAF,GACA7B,gBAAgB,CAACV,gBAAD,CAAmBC,aAAnB,CAAkCC,eAAlC,CAAhB,CACH,CAED;AACA,eAAoDV,QAAQ,CAAC,KAAD,CAA5D,yCAAOgD,kBAAP,eAA2BC,qBAA3B,eACA,QAASC,wBAAT,CAAiC1C,gBAAjC,CAAmDC,aAAnD,CAAkEC,eAAlE,CAAmF,CAC/EuC,qBAAqB,CAAC,IAAD,CAArB,CACAE,UAAU,CAAC,UAAM,CACbF,qBAAqB,CAAC,KAAD,CAArB,CACH,CAFS,CAEP,IAFO,CAAV,CAGH,CAED,QAASG,mBAAT,EAA8B,CAC1BH,qBAAqB,CAAC,KAAD,CAArB,CACH,CAED,QAASI,sBAAT,CAA+B7C,gBAA/B,CAAiDC,aAAjD,CAAgEC,eAAhE,CAAiF,CAC7EuC,qBAAqB,CAAC,KAAD,CAArB,CACA5B,gBAAgB,CAACb,gBAAD,CAAmBC,aAAnB,CAAkCC,eAAlC,CAAhB,CACH,CAED;AACA,eAAoDV,QAAQ,CAAC,KAAD,CAA5D,yCAAOsD,kBAAP,eAA2BC,qBAA3B,eACA,QAASC,yBAAT,EAAoC,CAChCD,qBAAqB,CAAC,IAAD,CAArB,CACH,CACD,QAASE,0BAAT,CAAmCC,cAAnC,CAAmD,CAC/C;AACApC,gBAAgB,CAACoC,cAAD,CAAiBlD,gBAAjB,CAAmCE,eAAnC,CAAoDD,aAApD,CAAhB,CACA8C,qBAAqB,CAAC,KAAD,CAArB,CACH,CAED,mBACI,aAAK,SAAS,4BAAsB9B,WAAtB,CAAd,wBAEI,YAAM,SAAS,CAAC,cAAhB,uBACI,aAAK,SAAS,CAAC,mBAAf,wBAEI,aAAK,SAAS,CAAC,mBAAf,wBACI,UAAG,SAAS,CAAC,sCAAb,EADJ,cAEI,WAAG,SAAS,CAAC,uBAAb,6CAAuD,eAAQ,SAAS,CAAC,2BAAlB,UAA+CC,cAAc,CAACiC,KAA9D,EAAvD,OAFJ,GAFJ,cAMI,aAAK,SAAS,CAAC,sBAAf,wBACI,cAAO,QAAQ,CAAE,kBAACnB,CAAD,QAAOD,sBAAqB,CAACC,CAAD,CAA5B,EAAjB,CAAkD,SAAS,CAAC,oBAA5D,CAAiF,KAAK,CAAEZ,WAAW,CAAC+B,KAApG,CAA2G,WAAW,CAAC,oBAAvH,CAA4I,IAAI,CAAC,MAAjJ,EADJ,CAEK,CAACX,kBAAD,eAAuB,eAAQ,OAAO,CAAE,yBAAME,wBAAuB,CAAC1C,gBAAD,CAAmBC,aAAnB,CAAkCC,eAAlC,CAA7B,EAAjB,CAAkG,SAAS,CAAC,gCAA5G,uBACpB,UAAG,SAAS,CAAC,uBAAb,EADoB,EAF5B,CAKKsC,kBAAkB,eAAI,aAAK,SAAS,CAAC,2BAAf,wBACnB,YAAK,SAAS,CAAC,+BAAf,uBACI,YAAK,SAAS,CAAC,+BAAf,EADJ,EADmB,cAInB,eAAQ,OAAO,CAAE,yBAAMK,sBAAqB,CAAC7C,gBAAD,CAAmBC,aAAnB,CAAkCC,eAAlC,CAA3B,EAAjB,CAAgG,SAAS,CAAC,2CAA1G,uBACI,UAAG,SAAS,CAAC,qDAAb,EADJ,EAJmB,cAOnB,eAAQ,OAAO,CAAE,yBAAM0C,mBAAkB,EAAxB,EAAjB,CAA6C,SAAS,CAAC,2CAAvD,uBACI,UAAG,SAAS,CAAC,oDAAb,EADJ,EAPmB,GAL3B,GANJ,cAyBI,WAAG,SAAS,CAAC,mBAAb,sCAA4C,eAAQ,SAAS,CAAC,2BAAlB,UAA+CxB,WAAW,CAACgC,MAA3D,EAA5C,QAA4HhC,WAAW,CAACiC,WAAxI,QAAyJjC,WAAW,CAACkC,WAArK,OAzBJ,GADJ,EAFJ,cAgCI,aAAK,SAAS,CAAC,6BAAf,wBACI,aAAM,SAAS,CAAC,4BAAhB,wBACI,UAAG,SAAS,CAAC,2CAAb,EADJ,cAEI,cAAO,QAAQ,CAAE,kBAACtB,CAAD,QAAOC,oBAAmB,CAACD,CAAD,CAA1B,EAAjB,CAAgD,SAAS,CAAC,wBAA1D,CAAmF,KAAK,CAAEZ,WAAW,CAACmC,GAAtG,CAA2G,WAAW,CAAC,YAAvH,CAAoI,IAAI,CAAC,MAAzI,EAFJ,GADJ,CAKKT,kBAAkB,eAAI,aAAK,SAAS,CAAC,+BAAf,wBACnB,UAAG,SAAS,CAAC,0BAAb,qBADmB,cAEnB,eAAQ,OAAO,CAAE,yBAAMG,0BAAyB,CAAC,OAAD,CAA/B,EAAjB,CAA2D,SAAS,WAAK/C,eAAe,GAAK,OAApB,EAA+B,wBAApC,2DAApE,uBACI,UAAG,SAAS,CAAC,yBAAb,EADJ,EAFmB,cAMnB,eAAQ,OAAO,CAAE,yBAAM+C,0BAAyB,CAAC,aAAD,CAA/B,EAAjB,CAAiE,SAAS,WAAK/C,eAAe,GAAK,aAApB,EAAqC,8BAA1C,6DAA1E,uBACI,UAAG,SAAS,CAAC,2BAAb,EADJ,EANmB,cAUnB,eAAQ,OAAO,CAAE,yBAAM+C,0BAAyB,CAAC,UAAD,CAA/B,EAAjB,CAA8D,SAAS,WAAK/C,eAAe,GAAK,UAApB,EAAkC,2BAAvC,4DAAvE,uBACI,UAAG,SAAS,CAAC,kBAAb,EADJ,EAVmB,GAL3B,CAoBK,CAAC4C,kBAAD,eAAuB,aAAK,SAAS,CAAC,+BAAf,wBACpB,UAAG,SAAS,CAAC,0BAAb,qBADoB,CAEnB5C,eAAe,GAAK,OAApB,eAA+B,eAAQ,OAAO,CAAE,yBAAM8C,yBAAwB,EAA9B,EAAjB,CAAmD,SAAS,CAAC,mDAA7D,uBAC5B,UAAG,SAAS,CAAC,yBAAb,EAD4B,EAFZ,CAKnB9C,eAAe,GAAK,aAApB,eAAqC,eAAQ,OAAO,CAAE,yBAAM8C,yBAAwB,EAA9B,EAAjB,CAAmD,SAAS,CAAC,mDAA7D,uBAClC,UAAG,SAAS,CAAC,2BAAb,EADkC,EALlB,CAQnB9C,eAAe,GAAK,UAApB,eAAkC,eAAQ,OAAO,CAAE,yBAAM8C,yBAAwB,EAA9B,EAAjB,CAAmD,SAAS,CAAC,mDAA7D,uBAC/B,UAAG,SAAS,CAAC,kBAAb,EAD+B,EARf,GApB5B,GAhCJ,cAkEI,YAAK,SAAS,CAAC,+BAAf,uBACI,iBAAU,QAAQ,CAAE,kBAAChB,CAAD,QAAOE,wBAAuB,CAACF,CAAD,CAA9B,EAApB,CAAuD,SAAS,CAAC,qBAAjE,CAAuF,KAAK,CAAEZ,WAAW,CAACoC,OAA1G,CAAmH,WAAW,CAAC,oBAA/H,CAAoJ,IAAI,CAAC,MAAzJ,EADJ,EAlEJ,cAqEI,aAAK,SAAS,CAAC,oBAAf,wBAEI,WAAG,SAAS,CAAC,4BAAb,wBACI,mBAAIpC,WAAW,CAACqC,QAAZ,CAAqBlC,MAArB,CAA4B,SAAAK,IAAI,QAAIA,KAAI,CAAC8B,SAAL,GAAmB,KAAvB,EAAhC,CAAJ,EAAmEC,MADvE,OAFJ,cAMI,aAAK,SAAS,CAAC,8BAAf,WAEKvC,WAAW,CAACqC,QAAZ,CAAqBE,MAArB,GAAgC,CAAhC,EAAqCvC,WAAW,CAACqC,QAAZ,CAAqBG,GAArB,CAAyB,SAAAC,OAAO,CAAI,CACtE,GAAIA,OAAO,CAACH,SAAR,GAAsB,KAA1B,CAAiC,CAC7B,mBAAO,KAAC,WAAD,EAEH,EAAE,CAAEG,OAAO,CAACpC,EAFT,CAGH,MAAM,CAAEoC,OAAO,CAACT,MAHb,CAIH,OAAO,CAAES,OAAO,CAACL,OAJd,CAKH,WAAW,CAAEK,OAAO,CAACR,WALlB,CAMH,WAAW,CAAEQ,OAAO,CAACP,WANlB,CAOH,UAAU,CAAEO,OAAO,CAACC,UAPjB,CAQH,OAAO,CAAED,OAAO,CAACE,OARd,CASH,SAAS,CAAEF,OAAO,CAACH,SAThB,CAUH,2BAA2B,CAAE,qCAACjC,EAAD,QAAQU,6BAA2B,CAACV,EAAD,CAAnC,EAV1B,CAWH,uBAAuB,CAAE,iCAACA,EAAD,QAAQW,yBAAuB,CAACX,EAAD,CAA/B,EAXtB,CAYH,0BAA0B,CAAE,oCAACA,EAAD,QAAQY,4BAA0B,CAACZ,EAAD,CAAlC,EAZzB,EACEoC,OAAO,CAACpC,EADV,CAAP,CAcH,CACJ,CAjBqC,CAF1C,cAqBI,cAAM,SAAS,CAAC,0BAAhB,wBACI,cAAO,QAAQ,CAAE,kBAACO,CAAD,QAAOrB,wBAAuB,CAACqB,CAAD,CAA9B,EAAjB,CAAoD,SAAS,CAAC,sBAA9D,CAAqF,KAAK,CAAEpB,iBAA5F,CAA+G,WAAW,CAAC,kBAA3H,EADJ,cAEI,KAAC,YAAD,EACI,SAAS,CAAC,kBADd,CAEI,IAAI,CAAC,aAFT,CAGI,WAAW,CAAE,qBAACoB,CAAD,QAAOM,wBAAuB,CAACN,CAAD,CAA9B,EAHjB,EAFJ,GArBJ,CA8BK,mBAAIZ,WAAW,CAACqC,QAAZ,CAAqBlC,MAArB,CAA4B,SAAAK,IAAI,QAAIA,KAAI,CAAC8B,SAAL,GAAmB,KAAvB,EAAhC,CAAJ,EAAmEC,MAAnE,GAA8E,CAA9E,eAAmF,KAAC,iBAAD,EAChF,IAAI,CAAC,2BAD2E,CAEhF,IAAI,CAAC,kCAF2E,EA9BxF,GANJ,GArEJ,GADJ,CAuHH,CAED,cAAe7D,SAAf"},"metadata":{},"sourceType":"module"}